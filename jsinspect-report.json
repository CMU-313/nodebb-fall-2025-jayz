[{"id":"be30f1e94d9095a6e0ff27b568bceef66f231e71","instances":[{"path":"./src/upgrades/1.13.0/clean_flag_byCid.js","lines":[9,14],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('flags:datetime', async (flagIds) => {\n\t\tprogress.incr(flagIds.length);\n\t\tconst flagData = await db.getObjects(flagIds.map(id => `flag:${id}`));"},{"path":"./src/upgrades/1.15.0/add_target_uid_to_flags.js","lines":[10,15],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('flags:datetime', async (flagIds) => {\n\t\tprogress.incr(flagIds.length);\n\t\tconst flagData = await db.getObjects(flagIds.map(id => `flag:${id}`));"}]},
{"id":"c093f281c6302d2c68d37db7ff0faacbf359c878","instances":[{"path":"./src/upgrades/1.13.0/clean_post_topic_hash.js","lines":[17,21],"code":"await batch.processSortedSet('posts:pid', async (pids) => {\n\tprogress.incr(pids.length);\n\n\tconst postData = await db.getObjects(pids.map(pid => `post:${pid}`));\n\tawait Promise.all(postData.map(async (post) => {"},{"path":"./src/upgrades/1.15.4/clear_purged_replies.js","lines":[14,17],"code":"await batch.processSortedSet('posts:pid', async (pids) => {\n\tprogress.incr(pids.length);\n\tlet postData = await db.getObjects(pids.map(pid => `post:${pid}`));\n\tpostData = postData.filter(p => p && parseInt(p.toPid, 10));"}]},
{"id":"11e0fc3a3289c24854d83ebaca2df0d801ef03cf","instances":[{"path":"./src/upgrades/3.2.0/fix_username_zsets.js","lines":[15,18],"code":"await batch.processSortedSet('users:joindate', async (uids) => {\n\tprogress.incr(uids.length);\n\tconst usersData = await db.getObjects(uids.map(uid => `user:${uid}`));\n\tconst bulkAdd = [];"},{"path":"./src/upgrades/3.8.0/user-upload-folders.js","lines":[44,47],"code":"await batch.processSortedSet('users:joindate', async (uids) => {\n\tprogress.incr(uids.length);\n\tconst usersData = await db.getObjects(uids.map(uid => `user:${uid}`));\n\tconst bulkSet = [];"}]},
{"id":"0d7c807b26d6c47ec47e537b0ef6772b615fb685","instances":[{"path":"./src/database/mongo/sets.js","lines":[124,133],"code":"\treturn values.map(v => membersSet.has(v));\n};\n\nmodule.isMemberOfSets = async function (sets, value) {\n\tif (!Array.isArray(sets) || !sets.length) {\n\t\treturn [];\n\t}\n\tvalue = helpers.valueToString(value);\n\n\tconst result = await module.client.collection('objects').find({"},{"path":"./src/database/postgres/sets.js","lines":[132,142],"code":"\treturn values.map(v => res.rows.some(r => r.m === v));\n};\n\nmodule.isMemberOfSets = async function (sets, value) {\n\tif (!Array.isArray(sets) || !sets.length) {\n\t\treturn [];\n\t}\n\n\tvalue = helpers.valueToString(value);\n\n\tconst res = await module.pool.query({"}]},
{"id":"9f2e45a3664a904582b639122fb64901c1669ed3","instances":[{"path":"./src/database/mongo/sorted.js","lines":[276,284],"code":"\treturn result ? result.score : null;\n};\n\nmodule.sortedSetsScore = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tvalue = helpers.valueToString(value);\n\tconst result = await module.client.collection('objects').find({ _key: { $in: keys }, value: value }, { projection: { _id: 0, value: 0 } }).toArray();"},{"path":"./src/database/postgres/sorted.js","lines":[350,360],"code":"\treturn null;\n};\n\nmodule.sortedSetsScore = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tvalue = helpers.valueToString(value);\n\n\tconst res = await module.pool.query({"}]},
{"id":"40b9ed2c19f2990e7123449919cfe29727611195","instances":[{"path":"./src/database/mongo/sorted.js","lines":[352,357],"code":"module.isMemberOfSortedSets = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tvalue = helpers.valueToString(value);\n\tconst results = await module.client.collection('objects').find({"},{"path":"./src/database/postgres/sorted.js","lines":[458,465],"code":"module.isMemberOfSortedSets = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tvalue = helpers.valueToString(value);\n\n\tconst res = await module.pool.query({"}]},
{"id":"b593037cb1208833023be321a232213042dfe70c","instances":[{"path":"./src/upgrades/1.14.1/readd_deleted_recent_topics.js","lines":[10,15],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('topics:tid', async (tids) => {\n\t\tprogress.incr(tids.length);\n\t\tconst topicData = await db.getObjectsFields("},{"path":"./src/upgrades/1.15.0/topic_poster_count.js","lines":[10,15],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('topics:tid', async (tids) => {\n\t\tprogress.incr(tids.length);\n\t\tconst keys = tids.map(tid => `tid:${tid}:posters`);"}]},
{"id":"95498720bd41b38bcd21b3e4cbeabb53606410c1","instances":[{"path":"./src/upgrades/1.1.1/upload_privileges.js","lines":[14,20],"code":"db.getSortedSetRange('categories:cid', 0, -1, (err, cids) => {\n\tif (err) {\n\t\treturn callback(err);\n\t}\n\n\tasync.eachSeries(cids, (cid, next) => {\n\t\tprivilegesAPI.categories.list(cid, (err, data) => {"},{"path":"./src/upgrades/1.10.0/post_history_privilege.js","lines":[13,20],"code":"db.getSortedSetRange('categories:cid', 0, -1, (err, cids) => {\n\tif (err) {\n\t\treturn callback(err);\n\t}\n\tasync.eachSeries(cids, (cid, next) => {\n\t\tprivileges.categories.give(['groups:posts:history'], cid, 'registered-users', next);\n\t}, callback);\n});"},{"path":"./src/upgrades/1.2.0/category_recent_tids.js","lines":[11,17],"code":"db.getSortedSetRange('categories:cid', 0, -1, (err, cids) => {\n\tif (err) {\n\t\treturn callback(err);\n\t}\n\n\tasync.eachSeries(cids, (cid, next) => {\n\t\tdb.getSortedSetRevRange(`cid:${cid}:pids`, 0, 0, (err, pid) => {"},{"path":"./src/upgrades/1.7.4/global_upload_privilege.js","lines":[13,18],"code":"db.getSortedSetRange('categories:cid', 0, -1, (err, cids) => {\n\tif (err) {\n\t\treturn callback(err);\n\t}\n\tasync.eachSeries(cids, (cid, next) => {\n\t\tgetGroupPrivileges(cid, (err, groupPrivileges) => {"},{"path":"./src/upgrades/1.7.4/vote_privilege.js","lines":[13,20],"code":"db.getSortedSetRange('categories:cid', 0, -1, (err, cids) => {\n\tif (err) {\n\t\treturn callback(err);\n\t}\n\tasync.eachSeries(cids, (cid, next) => {\n\t\tprivileges.categories.give(['groups:posts:upvote', 'groups:posts:downvote'], cid, 'registered-users', next);\n\t}, callback);\n});"},{"path":"./src/upgrades/1.8.0/give_spiders_privileges.js","lines":[13,18],"code":"db.getSortedSetRange('categories:cid', 0, -1, (err, cids) => {\n\tif (err) {\n\t\treturn callback(err);\n\t}\n\tasync.eachSeries(cids, (cid, next) => {\n\t\tgetGroupPrivileges(cid, (err, groupPrivileges) => {"}]},
{"id":"f653eb75d257143f27208be3b0a69052d5eebc3e","instances":[{"path":"./src/upgrades/1.7.3/topic_votes.js","lines":[13,16],"code":"batch.processSortedSet('topics:tid', async (tids) => {\n\tawait Promise.all(tids.map(async (tid) => {\n\t\tprogress.incr();\n\t\tconst topicData = await db.getObjectFields(`topic:${tid}`, ['mainPid', 'cid', 'pinned']);"},{"path":"./src/upgrades/1.7.4/fix_moved_topics_byvotes.js","lines":[12,15],"code":"await batch.processSortedSet('topics:tid', async (tids) => {\n\tawait Promise.all(tids.map(async (tid) => {\n\t\tprogress.incr();\n\t\tconst topicData = await db.getObjectFields(`topic:${tid}`, ['cid', 'oldCid', 'upvotes', 'downvotes', 'pinned']);"},{"path":"./src/upgrades/1.7.4/fix_user_topics_per_category.js","lines":[12,15],"code":"await batch.processSortedSet('topics:tid', async (tids) => {\n\tawait Promise.all(tids.map(async (tid) => {\n\t\tprogress.incr();\n\t\tconst topicData = await db.getObjectFields(`topic:${tid}`, ['cid', 'tid', 'uid', 'oldCid', 'timestamp']);"}]},
{"id":"4825f4aae20df82d46edec20f3ee5bc532e00f15","instances":[{"path":"./src/database/redis/sorted.js","lines":[110,117],"code":"module.sortedSetsCard = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tconst batch = module.client.batch();\n\tkeys.forEach(k => batch.zcard(String(k)));\n\treturn await helpers.execBatch(batch);\n};"},{"path":"./src/database/redis/sorted.js","lines":[185,190],"code":"module.sortedSetsScore = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tconst batch = module.client.batch();\n\tkeys.forEach(key => batch.zscore(String(key), String(value)));"},{"path":"./src/database/redis/sorted.js","lines":[220,225],"code":"module.isMemberOfSortedSets = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tconst batch = module.client.batch();\n\tkeys.forEach(k => batch.zscore(k, String(value)));"},{"path":"./src/database/redis/sorted.js","lines":[240,247],"code":"module.getSortedSetsMembers = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tconst batch = module.client.batch();\n\tkeys.forEach(k => batch.zrange(k, 0, -1));\n\treturn await helpers.execBatch(batch);\n};"},{"path":"./src/database/redis/sorted.js","lines":[249,254],"code":"module.getSortedSetsMembersWithScores = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tconst batch = module.client.batch();\n\tkeys.forEach(k => batch.zrange(k, 0, -1, 'WITHSCORES'));"}]},
{"id":"e2f8e48afb65f1d6d6169e783ab2699282293b98","instances":[{"path":"./src/user/delete.js","lines":[171,176],"code":"async function deleteUserFromFollowedTopics(uid) {\n\tconst tids = await db.getSortedSetRange(`uid:${uid}:followed_tids`, 0, -1);\n\tawait db.setsRemove(tids.map(tid => `tid:${tid}:followers`), uid);\n}\n\nasync function deleteUserFromIgnoredTopics(uid) {"},{"path":"./src/user/delete.js","lines":[176,181],"code":"async function deleteUserFromIgnoredTopics(uid) {\n\tconst tids = await db.getSortedSetRange(`uid:${uid}:ignored_tids`, 0, -1);\n\tawait db.setsRemove(tids.map(tid => `tid:${tid}:ignorers`), uid);\n}\n\nasync function deleteUserFromFollowedTags(uid) {"}]},
{"id":"60ec71eb5e825e06fe1c6d7c35322a578e405c16","instances":[{"path":"./src/upgrades/1.12.1/moderation_notes_refactor.js","lines":[11,18],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('users:joindate', async (uids) => {\n\t\tawait Promise.all(uids.map(async (uid) => {\n\t\t\tprogress.incr();\n\n\t\t\tconst notes = await db.getSortedSetRevRange(`uid:${uid}:moderation:notes`, 0, -1);"},{"path":"./src/upgrades/1.7.1/notification-settings.js","lines":[9,15],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('users:joindate', async (uids) => {\n\t\tawait Promise.all(uids.map(async (uid) => {\n\t\t\tprogress.incr();\n\t\t\tconst userSettings = await db.getObjectFields(`user:${uid}:settings`, ['sendChatNotifications', 'sendPostNotifications']);"}]},
{"id":"2d3074d8bed7a5fcbd0f65c56007b8fbff3a3986","instances":[{"path":"./src/upgrades/1.17.0/category_name_zset.js","lines":[9,13],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('categories:cid', async (cids) => {\n\t\tconst keys = cids.map(cid => `category:${cid}`);"},{"path":"./src/upgrades/1.17.0/subcategories_per_page.js","lines":[9,13],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('categories:cid', async (cids) => {\n\t\tconst keys = cids.map(cid => `category:${cid}`);"}]},
{"id":"e91c526c1aa73a602a22a85c54fb6edc84f73510","instances":[{"path":"./src/database/mongo/sorted/add.js","lines":[51,62],"code":"module.sortedSetsAdd = async function (keys, scores, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\tconst isArrayOfScores = Array.isArray(scores);\n\tif ((!isArrayOfScores && !utils.isNumber(scores)) ||\n\t\t(isArrayOfScores && scores.map(s => utils.isNumber(s)).includes(false))) {\n\t\tthrow new Error(`[[error:invalid-score, ${scores}]]`);\n\t}\n\n\tif (isArrayOfScores && scores.length !== keys.length) {\n\t\tthrow new Error('[[error:invalid-data]]');"},{"path":"./src/database/postgres/sorted/add.js","lines":[67,78],"code":"module.sortedSetsAdd = async function (keys, scores, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\tconst isArrayOfScores = Array.isArray(scores);\n\tif ((!isArrayOfScores && !utils.isNumber(scores)) ||\n\t\t(isArrayOfScores && scores.map(s => utils.isNumber(s)).includes(false))) {\n\t\tthrow new Error(`[[error:invalid-score, ${scores}]]`);\n\t}\n\n\tif (isArrayOfScores && scores.length !== keys.length) {\n\t\tthrow new Error('[[error:invalid-data]]');"},{"path":"./src/database/redis/sorted/add.js","lines":[40,51],"code":"module.sortedSetsAdd = async function (keys, scores, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\tconst isArrayOfScores = Array.isArray(scores);\n\tif ((!isArrayOfScores && !utils.isNumber(scores)) ||\n\t\t(isArrayOfScores && scores.map(s => utils.isNumber(s)).includes(false))) {\n\t\tthrow new Error(`[[error:invalid-score, ${scores}]]`);\n\t}\n\n\tif (isArrayOfScores && scores.length !== keys.length) {\n\t\tthrow new Error('[[error:invalid-data]]');"}]},
{"id":"8b2cb4d080cc8223f8681be44021740820fe2695","instances":[{"path":"./src/controllers/accounts/posts.js","lines":[33,38],"code":"\tgetSets: async function (callerUid, userData) {\n\t\tconst cids = await categories.getCidsByPrivilege('categories:cid', callerUid, 'topics:read');\n\t\treturn cids.map(c => `cid:${c}:uid:${userData.uid}:pids`);\n\t},\n},\n'account/upvoted': {"},{"path":"./src/controllers/accounts/posts.js","lines":[58,62],"code":"getSets: async function (callerUid, userData) {\n\tconst cids = await categories.getCidsByPrivilege('categories:cid', callerUid, 'topics:read');\n\treturn cids.map(c => `cid:${c}:uid:${userData.uid}:pids:votes`);\n},\ngetTopics: async (sets, req, start, stop) => {"},{"path":"./src/controllers/accounts/posts.js","lines":[77,81],"code":"getSets: async function (callerUid, userData) {\n\tconst cids = await categories.getCidsByPrivilege('categories:cid', callerUid, 'topics:read');\n\treturn cids.map(c => `cid:${c}:uid:${userData.uid}:pids:votes`);\n},\ngetTopics: async (sets, req, start, stop) => {"},{"path":"./src/controllers/accounts/posts.js","lines":[145,150],"code":"\tgetSets: async function (callerUid, userData) {\n\t\tconst cids = await categories.getCidsByPrivilege('categories:cid', callerUid, 'topics:read');\n\t\treturn cids.map(c => `cid:${c}:uid:${userData.uid}:tids`);\n\t},\n},\n'account/shares': {"}]},
{"id":"f115e21b3e646b61dba591c37620e91613e3d8a5","instances":[{"path":"./src/database/mongo/sorted/intersect.js","lines":[1,8],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tmodule.sortedSetIntersectCard = async function (keys) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst objects = module.client.collection('objects');"},{"path":"./src/database/postgres/sorted/intersect.js","lines":[1,9],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tmodule.sortedSetIntersectCard = async function (keys) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst res = await module.pool.query({"}]},
{"id":"d4f1c3b7a45fb0b98db5025ef757bd7973a7ba0a","instances":[{"path":"./src/database/mongo/sorted/union.js","lines":[1,9],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tmodule.sortedSetUnionCard = async function (keys) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst data = await module.client.collection('objects').aggregate(["},{"path":"./src/database/postgres/sorted/union.js","lines":[1,9],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tmodule.sortedSetUnionCard = async function (keys) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst res = await module.pool.query({"}]},
{"id":"2f48ce99635a965004167248d58a20fd100fb5a7","instances":[{"path":"./src/database/postgres/sets.js","lines":[178,184],"code":"module.getSetsMembers = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tconst res = await module.pool.query({\n\t\tname: 'getSetsMembers',"},{"path":"./src/database/postgres/sorted.js","lines":[202,208],"code":"module.sortedSetsCard = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tconst res = await module.pool.query({\n\t\tname: 'sortedSetsCard',"},{"path":"./src/database/postgres/sorted.js","lines":[491,497],"code":"module.getSortedSetsMembers = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tconst res = await module.pool.query({\n\t\tname: 'getSortedSetsMembers',"},{"path":"./src/database/postgres/sorted.js","lines":[508,514],"code":"module.getSortedSetsMembersWithScores = async function (keys) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tconst res = await module.pool.query({\n\t\tname: 'getSortedSetsMembersWithScores',"}]},
{"id":"e4c40570e3ff7473d7219a3c8f618bfa3ebf571c","instances":[{"path":"./src/database/redis/hash.js","lines":[226,232],"code":"module.incrObjectFieldByBulk = async function (data) {\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\n\tconst batch = module.client.batch();\n\tdata.forEach((item) => {"},{"path":"./src/database/redis/sorted/add.js","lines":[63,68],"code":"module.sortedSetAddBulk = async function (data) {\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tconst batch = module.client.batch();\n\tdata.forEach((item) => {"},{"path":"./src/database/redis/sorted/remove.js","lines":[38,45],"code":"module.sortedSetRemoveBulk = async function (data) {\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tconst batch = module.client.batch();\n\tdata.forEach(item => batch.zrem(item[0], item[1]));\n\tawait helpers.execBatch(batch);\n};"}]},
{"id":"d2a87fdd6b0541fee818fad11e67915cee693120","instances":[{"path":"./src/database/redis/sorted.js","lines":[144,147],"code":"module.sortedSetsRanks = async function (keys, values) {\n\tconst batch = module.client.batch();\n\tfor (let i = 0; i < values.length; i += 1) {\n\t\tbatch.zrank(keys[i], String(values[i]));"},{"path":"./src/database/redis/sorted.js","lines":[152,155],"code":"module.sortedSetsRevRanks = async function (keys, values) {\n\tconst batch = module.client.batch();\n\tfor (let i = 0; i < values.length; i += 1) {\n\t\tbatch.zrevrank(keys[i], String(values[i]));"}]},
{"id":"0195faba71af2dfb55606dda8fe6ae2726ff2534","instances":[{"path":"./src/database/redis/sorted.js","lines":[160,163],"code":"module.sortedSetRanks = async function (key, values) {\n\tconst batch = module.client.batch();\n\tfor (let i = 0; i < values.length; i += 1) {\n\t\tbatch.zrank(key, String(values[i]));"},{"path":"./src/database/redis/sorted.js","lines":[168,171],"code":"module.sortedSetRevRanks = async function (key, values) {\n\tconst batch = module.client.batch();\n\tfor (let i = 0; i < values.length; i += 1) {\n\t\tbatch.zrevrank(key, String(values[i]));"}]},
{"id":"6b015f83579cce291e227fd1d6c2158927c168ff","instances":[{"path":"./src/topics/delete.js","lines":[122,127],"code":"db.sortedSetsRemove([\n\t`cid:${topicData.cid}:tids`,\n\t`cid:${topicData.cid}:tids:pinned`,\n\t`cid:${topicData.cid}:tids:create`,\n\t`cid:${topicData.cid}:tids:posts`,\n\t`cid:${topicData.cid}:tids:lastposttime`,"},{"path":"./src/topics/scheduled.js","lines":[69,75],"code":"db.sortedSetsRemove([\n\t`cid:${topicData.cid}:tids`,\n\t`cid:${topicData.cid}:tids:create`,\n\t`cid:${topicData.cid}:tids:posts`,\n\t`cid:${topicData.cid}:tids:votes`,\n\t`cid:${topicData.cid}:tids:views`,\n], tid),"},{"path":"./src/topics/tools.js","lines":[172,178],"code":"promises.push(db.sortedSetsRemove([\n\t`cid:${topicData.cid}:tids`,\n\t`cid:${topicData.cid}:tids:create`,\n\t`cid:${topicData.cid}:tids:posts`,\n\t`cid:${topicData.cid}:tids:votes`,\n\t`cid:${topicData.cid}:tids:views`,\n], tid));"},{"path":"./src/topics/tools.js","lines":[245,250],"code":"await db.sortedSetsRemove([\n\t`cid:${topicData.cid}:tids`,\n\t`cid:${topicData.cid}:tids:create`,\n\t`cid:${topicData.cid}:tids:pinned`,\n\t`cid:${topicData.cid}:tids:posts`,\n\t`cid:${topicData.cid}:tids:votes`,"}]},
{"id":"175292141003af3fd6bca2526ed78433af367588","instances":[{"path":"./src/api/chats.js","lines":[311,318],"code":"chatsAPI.toggleOwner = async (caller, { roomId, uid, state }) => {\n\tconst [isAdmin, inRoom, isRoomOwner] = await Promise.all([\n\t\tuser.isAdministrator(caller.uid),\n\t\tmessaging.isUserInRoom(caller.uid, roomId),\n\t\tmessaging.isRoomOwner(caller.uid, roomId),\n\t]);\n\n\tif (!isAdmin && (!inRoom || !isRoomOwner)) {"},{"path":"./src/api/search.js","lines":[113,120],"code":"searchApi.roomUsers = async (caller, { query, roomId }) => {\n\tconst [isAdmin, inRoom, isRoomOwner] = await Promise.all([\n\t\tuser.isAdministrator(caller.uid),\n\t\tmessaging.isUserInRoom(caller.uid, roomId),\n\t\tmessaging.isRoomOwner(caller.uid, roomId),\n\t]);\n\n\tif (!isAdmin && !inRoom) {"}]},
{"id":"b5ac011b845c432c0c051794458f28a1f8a8d819","instances":[{"path":"./src/controllers/categories.js","lines":[54,55],"code":"if (req.originalUrl.startsWith(`${nconf.get('relative_path')}/api/categories`) || req.originalUrl.startsWith(`${nconf.get('relative_path')}/categories`)) {\n\tdata.title = '[[pages:categories]]';"},{"path":"./src/controllers/popular.js","lines":[18,19],"code":"if (req.originalUrl.startsWith(`${nconf.get('relative_path')}/api/popular`) || req.originalUrl.startsWith(`${nconf.get('relative_path')}/popular`)) {\n\tdata.title = `[[pages:popular-${term}]]`;"},{"path":"./src/controllers/top.js","lines":[18,20],"code":"if (req.originalUrl.startsWith(`${nconf.get('relative_path')}/api/top`) || req.originalUrl.startsWith(`${nconf.get('relative_path')}/top`)) {\n\tdata.title = `[[pages:top-${term}]]`;\n}"}]},
{"id":"ea8f8cd82fb663d64a7a8876df7436855c71e5a7","instances":[{"path":"./src/controllers/groups.js","lines":[70,83],"code":"groupsController.details = async function (req, res, next) {\n\tconst lowercaseSlug = req.params.slug.toLowerCase();\n\tif (req.params.slug !== lowercaseSlug) {\n\t\tif (res.locals.isAPI) {\n\t\t\treq.params.slug = lowercaseSlug;\n\t\t} else {\n\t\t\treturn res.redirect(`${nconf.get('relative_path')}/groups/${lowercaseSlug}`);\n\t\t}\n\t}\n\tconst groupName = await groups.getGroupNameByGroupSlug(req.params.slug);\n\tif (!groupName) {\n\t\treturn next();\n\t}\n\tconst [exists, isHidden, isAdmin, isGlobalMod] = await Promise.all(["},{"path":"./src/controllers/admin/groups.js","lines":[33,47],"code":"groupsController.get = async function (req, res, next) {\n\tconst lowercaseSlug = req.params.slug.toLowerCase();\n\tif (req.params.slug !== lowercaseSlug) {\n\t\tif (res.locals.isAPI) {\n\t\t\treq.params.slug = lowercaseSlug;\n\t\t} else {\n\t\t\treturn res.redirect(`${nconf.get('relative_path')}/admin/manage/groups/${lowercaseSlug}`);\n\t\t}\n\t}\n\n\tconst groupName = await groups.getGroupNameByGroupSlug(req.params.slug);\n\tif (!groupName) {\n\t\treturn next();\n\t}\n\tconst [groupNames, group] = await Promise.all(["}]},
{"id":"2a5c5984b20a74adafdacbbd7c64d39f61286dc9","instances":[{"path":"./src/controllers/accounts/blocks.js","lines":[10,15],"code":"blocksController.getBlocks = async function (req, res) {\n\tconst page = parseInt(req.query.page, 10) || 1;\n\tconst resultsPerPage = 50;\n\tconst start = Math.max(0, page - 1) * resultsPerPage;\n\tconst stop = start + resultsPerPage - 1;\n\tconst payload = res.locals.userData;"},{"path":"./src/controllers/admin/digest.js","lines":[9,14],"code":"digestController.get = async function (req, res) {\n\tconst page = parseInt(req.query.page, 10) || 1;\n\tconst resultsPerPage = 50;\n\tconst start = Math.max(0, page - 1) * resultsPerPage;\n\tconst stop = start + resultsPerPage - 1;\n\tconst delivery = await digest.getDeliveryTimes(start, stop);"},{"path":"./src/controllers/admin/settings.js","lines":[144,149],"code":"settingsController.api = async (req, res) => {\n\tconst page = parseInt(req.query.page, 10) || 1;\n\tconst resultsPerPage = 50;\n\tconst start = Math.max(0, page - 1) * resultsPerPage;\n\tconst stop = start + resultsPerPage - 1;\n\tconst [tokens, count] = await Promise.all(["}]},
{"id":"becdb1a64a6756f8b75e67d528b12800b1cf706f","instances":[{"path":"./src/database/mongo/hash.js","lines":[39,47],"code":"module.setObjectBulk = async function (...args) {\n\tlet data = args[0];\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tif (Array.isArray(args[1])) {\n\t\tconsole.warn('[deprecated] db.setObjectBulk(keys, data) usage is deprecated, please use db.setObjectBulk(data)');\n\t\t// conver old format to new format for backwards compatibility\n\t\tdata = args[0].map((key, i) => [key, args[1][i]]);"},{"path":"./src/database/postgres/hash.js","lines":[47,55],"code":"module.setObjectBulk = async function (...args) {\n\tlet data = args[0];\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tif (Array.isArray(args[1])) {\n\t\tconsole.warn('[deprecated] db.setObjectBulk(keys, data) usage is deprecated, please use db.setObjectBulk(data)');\n\t\t// conver old format to new format for backwards compatibility\n\t\tdata = args[0].map((key, i) => [key, args[1][i]]);"},{"path":"./src/database/redis/hash.js","lines":[39,47],"code":"module.setObjectBulk = async function (...args) {\n\tlet data = args[0];\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tif (Array.isArray(args[1])) {\n\t\tconsole.warn('[deprecated] db.setObjectBulk(keys, data) usage is deprecated, please use db.setObjectBulk(data)');\n\t\t// conver old format to new format for backwards compatibility\n\t\tdata = args[0].map((key, i) => [key, args[1][i]]);"}]},
{"id":"10b6bda241dd71a1d880901d83249963497aa223","instances":[{"path":"./src/database/mongo/hash.js","lines":[194,196],"code":"module.deleteObjectFields = async function (key, fields) {\n\tif (!key || (Array.isArray(key) && !key.length) || !Array.isArray(fields) || !fields.length) {\n\t\treturn;"},{"path":"./src/database/postgres/hash.js","lines":[301,303],"code":"module.deleteObjectFields = async function (key, fields) {\n\tif (!key || (Array.isArray(key) && !key.length) || !Array.isArray(fields) || !fields.length) {\n\t\treturn;"},{"path":"./src/database/redis/hash.js","lines":[182,184],"code":"module.deleteObjectFields = async function (key, fields) {\n\tif (!key || (Array.isArray(key) && !key.length) || !Array.isArray(fields) || !fields.length) {\n\t\treturn;"}]},
{"id":"83cedbb7d33d21029bee98f96eceaca47fbee58e","instances":[{"path":"./src/database/mongo/hash.js","lines":[269,276],"code":"module.incrObjectFieldByBulk = async function (data) {\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\n\tconst bulk = module.client.collection('objects').initializeUnorderedBulkOp();\n\n\tdata.forEach((item) => {"},{"path":"./src/database/mongo/sorted/add.js","lines":[77,82],"code":"module.sortedSetAddBulk = async function (data) {\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tconst bulk = module.client.collection('objects').initializeUnorderedBulkOp();\n\tdata.forEach((item) => {"},{"path":"./src/database/mongo/sorted/remove.js","lines":[55,62],"code":"module.sortedSetRemoveBulk = async function (data) {\n\tif (!Array.isArray(data) || !data.length) {\n\t\treturn;\n\t}\n\tconst bulk = module.client.collection('objects').initializeUnorderedBulkOp();\n\tdata.forEach(item => bulk.find({ _key: item[0], value: String(item[1]) }).delete());\n\tawait bulk.execute();\n};"}]},
{"id":"84807f95704f2e50332e3ff638b9ecaa76d5d472","instances":[{"path":"./src/database/mongo/sets.js","lines":[8,15],"code":"module.setAdd = async function (key, value) {\n\tif (!Array.isArray(value)) {\n\t\tvalue = [value];\n\t}\n\tif (!value.length) {\n\t\treturn;\n\t}\n\tvalue = value.map(v => helpers.valueToString(v));"},{"path":"./src/database/postgres/sets.js","lines":[8,15],"code":"module.setAdd = async function (key, value) {\n\tif (!Array.isArray(value)) {\n\t\tvalue = [value];\n\t}\n\tif (!value.length) {\n\t\treturn;\n\t}\n\tawait module.transaction(async (client) => {"},{"path":"./src/database/redis/sets.js","lines":[6,14],"code":"module.setAdd = async function (key, value) {\n\tif (!Array.isArray(value)) {\n\t\tvalue = [value];\n\t}\n\tif (!value.length) {\n\t\treturn;\n\t}\n\tawait module.client.sadd(key, value);\n};"}]},
{"id":"186a3e23011741daaea115995937dd16a3e9b735","instances":[{"path":"./src/database/mongo/sorted/remove.js","lines":[23,34],"code":"\t\tvalue: isValueArray ? { $in: value } : value,\n\t});\n};\n\nmodule.sortedSetsRemove = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\tvalue = helpers.valueToString(value);\n\n\tawait module.client.collection('objects').deleteMany({ _key: { $in: keys }, value: value });\n};"},{"path":"./src/database/postgres/sorted/remove.js","lines":[29,40],"code":"\t\tvalues: [key, value],\n\t});\n};\n\nmodule.sortedSetsRemove = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\n\tvalue = helpers.valueToString(value);\n\n\tawait module.pool.query({"}]},
{"id":"125f7ffb17829fa25c272c08a1bbf0edfd4ecbc6","instances":[{"path":"./src/database/mongo/sorted.js","lines":[284,284],"code":"const result = await module.client.collection('objects').find({ _key: { $in: keys }, value: value }, { projection: { _id: 0, value: 0 } }).toArray();"},{"path":"./src/database/mongo/sorted.js","lines":[357,361],"code":"const results = await module.client.collection('objects').find({\n\t_key: { $in: keys }, value: value,\n}, {\n\tprojection: { _id: 0, _key: 1, value: 1 },\n}).toArray();"}]},
{"id":"87e48adee7365fbe98ebd05f96444f674356aae0","instances":[{"path":"./src/database/mongo/sorted/add.js","lines":[1,12],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('../helpers');\n\tconst utils = require('../../../utils');\n\n\tmodule.sortedSetAdd = async function (key, score, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tif (Array.isArray(score) && Array.isArray(value)) {\n\t\t\treturn await sortedSetAddBulk(key, score, value);"},{"path":"./src/database/postgres/sorted/add.js","lines":[1,13],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('../helpers');\n\tconst utils = require('../../../utils');\n\n\tmodule.sortedSetAdd = async function (key, score, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(score) && Array.isArray(value)) {\n\t\t\treturn await sortedSetAddBulk(key, score, value);"},{"path":"./src/database/redis/sorted/add.js","lines":[1,12],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('../helpers');\n\tconst utils = require('../../../utils');\n\n\tmodule.sortedSetAdd = async function (key, score, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tif (Array.isArray(score) && Array.isArray(value)) {\n\t\t\treturn await sortedSetAddMulti(key, score, value);"}]},
{"id":"70efc916cc2c8eb9c8cf930a6f0c904e873285af","instances":[{"path":"./src/database/mongo/sorted/add.js","lines":[30,42],"code":"async function sortedSetAddBulk(key, scores, values) {\n\tif (!scores.length || !values.length) {\n\t\treturn;\n\t}\n\tif (scores.length !== values.length) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\tfor (let i = 0; i < scores.length; i += 1) {\n\t\tif (!utils.isNumber(scores[i])) {\n\t\t\tthrow new Error(`[[error:invalid-score, ${scores[i]}]]`);\n\t\t}\n\t}\n\tvalues = values.map(helpers.valueToString);"},{"path":"./src/database/postgres/sorted/add.js","lines":[35,47],"code":"async function sortedSetAddBulk(key, scores, values) {\n\tif (!scores.length || !values.length) {\n\t\treturn;\n\t}\n\tif (scores.length !== values.length) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\tfor (let i = 0; i < scores.length; i += 1) {\n\t\tif (!utils.isNumber(scores[i])) {\n\t\t\tthrow new Error(`[[error:invalid-score, ${scores[i]}]]`);\n\t\t}\n\t}\n\tvalues = values.map(helpers.valueToString);"}]},
{"id":"6125a910907cf256acdaec800fbabec2fdc8b81b","instances":[{"path":"./src/database/mongo/sorted/remove.js","lines":[1,15],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('../helpers');\n\n\tmodule.sortedSetRemove = async function (key, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tconst isValueArray = Array.isArray(value);\n\t\tif (!value || (isValueArray && !value.length)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isValueArray) {"},{"path":"./src/database/postgres/sorted/remove.js","lines":[1,15],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('../helpers');\n\n\tmodule.sortedSetRemove = async function (key, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tconst isValueArray = Array.isArray(value);\n\t\tif (!value || (isValueArray && !value.length)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Array.isArray(key)) {"},{"path":"./src/database/redis/sorted/remove.js","lines":[1,15],"code":"\n'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('../helpers');\n\n\tmodule.sortedSetRemove = async function (key, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tconst isValueArray = Array.isArray(value);\n\t\tif (!value || (isValueArray && !value.length)) {\n\t\t\treturn;\n\t\t}\n\t\tif (!isValueArray) {"}]},
{"id":"a638fdb379cb44afe8c9089a5a394ed7658d13cf","instances":[{"path":"./src/upgrades/1.14.0/fix_category_image_field.js","lines":[8,12],"code":"method: async () => {\n\tconst batch = require('../../batch');\n\tawait batch.processSortedSet('categories:cid', async (cids) => {\n\t\tlet categoryData = await db.getObjects(cids.map(c => `category:${c}`));\n\t\tcategoryData = categoryData.filter(c => c && (c.image || c.backgroundImage));"},{"path":"./src/upgrades/1.15.0/fix_category_colors.js","lines":[8,12],"code":"method: async () => {\n\tconst batch = require('../../batch');\n\tawait batch.processSortedSet('categories:cid', async (cids) => {\n\t\tlet categoryData = await db.getObjects(cids.map(c => `category:${c}`));\n\t\tcategoryData = categoryData.filter(c => c && (c.color === '#fff' || c.color === '#333' || String(c.color).length !== 7));"}]},
{"id":"5fcc696efe5de1e83ad74d738ff48a6ca6c250ac","instances":[{"path":"./src/upgrades/1.5.0/post_votes_zset.js","lines":[10,15],"code":"method: function (callback) {\n\tconst { progress } = this;\n\n\trequire('../../batch').processSortedSet('posts:pid', (pids, next) => {\n\t\tasync.each(pids, (pid, next) => {\n\t\t\tdb.getObjectFields(`post:${pid}`, ['upvotes', 'downvotes'], (err, postData) => {"},{"path":"./src/upgrades/1.9.0/refresh_post_upload_associations.js","lines":[9,14],"code":"method: function (callback) {\n\tconst { progress } = this;\n\n\trequire('../../batch').processSortedSet('posts:pid', (pids, next) => {\n\t\tasync.each(pids, (pid, next) => {\n\t\t\tposts.uploads.sync(pid, next);"}]},
{"id":"de2aece30760dc6fa9a374a7236b29275b96ae5d","instances":[{"path":"./src/events.js","lines":[134,141],"code":"eids = await Promise.all(\n\tuids.map(\n\t\tuid => db.getSortedSetRevIntersect({\n\t\t\tsets: [`events:time:uid:${uid}`, `events:time:${filter}`],\n\t\t\tstart: 0,\n\t\t\tstop: -1,\n\t\t\tweights: [1, 0],\n\t\t\twithScores: true,"},{"path":"./src/events.js","lines":[178,185],"code":"const eids = await Promise.all(\n\tuids.map(\n\t\tuid => db.getSortedSetRevIntersect({\n\t\t\tsets: [`events:time:uid:${uid}`, `events:time:${filter}`],\n\t\t\tstart: 0,\n\t\t\tstop: -1,\n\t\t\tweights: [1, 0],\n\t\t\twithScores: true,"}]},
{"id":"71ef389ec9987594c97dd51e25c984f96d776b46","instances":[{"path":"./src/events.js","lines":[146,150],"code":"eids = _.flatten(eids)\n\t.filter(\n\t\ti => (from === '-inf' || i.score >= from) && (to === '+inf' || i.score <= to)\n\t)\n\t.sort((a, b) => b.score - a.score)"},{"path":"./src/events.js","lines":[190,192],"code":"return _.flatten(eids).filter(\n\ti => (from === '-inf' || i.score >= from) && (to === '+inf' || i.score <= to)\n).length;"}]},
{"id":"b6606b7f1b11b709106a8da58c70cfd75d5901dc","instances":[{"path":"./src/logger.js","lines":[153,163],"code":"Logger.io_close = function (socket) {\n\t/*\n\t * Restore all hijacked sockets to their original emit/on functions\n\t */\n\tif (!socket || !socket.io || !socket.io.sockets || !socket.io.sockets.sockets) {\n\t\treturn;\n\t}\n\n\tconst clientsMap = socket.io.sockets.sockets;\n\n\tfor (const [, client] of clientsMap) {"},{"path":"./src/logger.js","lines":[174,184],"code":"Logger.io = function (socket) {\n\t/*\n\t * Go through all of the currently established sockets & hook their .emit/.on\n\t */\n\n\tif (!socket || !socket.io || !socket.io.sockets || !socket.io.sockets.sockets) {\n\t\treturn;\n\t}\n\n\tconst clientsMap = socket.io.sockets.sockets;\n\tfor (const [, socketObj] of clientsMap) {"}]},
{"id":"7330e8246fefdd0dba59eb5afb7c5b690121d2d0","instances":[{"path":"./src/activitypub/actors.js","lines":[125,137],"code":"let actors = await Promise.all(ids.map(async (id) => {\n\ttry {\n\t\tactivitypub.helpers.log(`[activitypub/actors] Processing ${id}`);\n\t\tconst actor = (typeof id === 'object' && id.hasOwnProperty('id')) ? id : await activitypub.get('uid', 0, id, { cache: process.env.CI === 'true' });\n\n\t\t// webfinger backreference check\n\t\tconst { hostname: domain } = new URL(id);\n\t\tconst { actorUri: canonicalId } = await activitypub.helpers.query(`${actor.preferredUsername}@${domain}`);\n\t\tif (id !== canonicalId) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet typeOk = false;"},{"path":"./src/activitypub/actors.js","lines":[303,315],"code":"let groups = await Promise.all(ids.map(async (id) => {\n\ttry {\n\t\tactivitypub.helpers.log(`[activitypub/actors] Processing group ${id}`);\n\t\tconst actor = (typeof id === 'object' && id.hasOwnProperty('id')) ? id : await activitypub.get('uid', 0, id, { cache: process.env.CI === 'true' });\n\n\t\t// webfinger backreference check\n\t\tconst { hostname: domain } = new URL(id);\n\t\tconst { actorUri: canonicalId } = await activitypub.helpers.query(`${actor.preferredUsername}@${domain}`);\n\t\tif (id !== canonicalId) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst typeOk = Array.isArray(actor.type) ?"}]},
{"id":"16d84d344da8367e8d7889c073744bd314c54b48","instances":[{"path":"./src/activitypub/inbox.js","lines":[405,414],"code":"activitypub.send('uid', id, actor, {\n\tid: `${nconf.get('url')}/${type}/${id}#activity/accept:follow/${handle}/${Date.now()}`,\n\ttype: 'Accept',\n\tobject: {\n\t\tid: followId,\n\t\ttype: 'Follow',\n\t\tactor,\n\t\tobject: object.id,\n\t},\n}).catch(err => winston.error(err.stack));"},{"path":"./src/activitypub/inbox.js","lines":[432,441],"code":"activitypub.send('cid', id, actor, {\n\tid: `${nconf.get('url')}/${type}/${id}#activity/accept:follow/${handle}/${Date.now()}`,\n\ttype: 'Accept',\n\tobject: {\n\t\tid: followId,\n\t\ttype: 'Follow',\n\t\tactor,\n\t\tobject: object.id,\n\t},\n}).catch(err => winston.error(err.stack));"}]},
{"id":"1419b18642b199baac47c765efe37015b7d2d93c","instances":[{"path":"./src/activitypub/inbox.js","lines":[467,476],"code":"if (localType === 'user') {\n\tif (!await db.isSortedSetMember(`followRequests:uid.${id}`, actor)) {\n\t\tif (await db.isSortedSetMember(`followingRemote:${id}`, actor)) return; // already following\n\t\treturn reject('Accept', req.body, actor); // not following, not requested, so reject to hopefully stop retries\n\t}\n\tconst timestamp = await db.sortedSetScore(`followRequests:uid.${id}`, actor);\n\tawait Promise.all([\n\t\tdb.sortedSetRemove(`followRequests:uid.${id}`, actor),\n\t\tdb.sortedSetAdd(`followingRemote:${id}`, timestamp, actor),\n\t\tdb.sortedSetAdd(`followersRemote:${actor}`, timestamp, id), // for followers backreference and notes assertion checking"},{"path":"./src/activitypub/inbox.js","lines":[480,491],"code":"} else if (localType === 'category') {\n\tif (!await db.isSortedSetMember(`followRequests:cid.${id}`, actor)) {\n\t\tif (await db.isSortedSetMember(`cid:${id}:following`, actor)) return; // already following\n\t\treturn reject('Accept', req.body, actor); // not following, not requested, so reject to hopefully stop retries\n\t}\n\tconst timestamp = await db.sortedSetScore(`followRequests:cid.${id}`, actor);\n\tawait Promise.all([\n\t\tdb.sortedSetRemove(`followRequests:cid.${id}`, actor),\n\t\tdb.sortedSetAdd(`cid:${id}:following`, timestamp, actor),\n\t\tdb.sortedSetAdd(`followersRemote:${actor}`, timestamp, `cid|${id}`), // for notes assertion checking\n\t]);\n}"}]},
{"id":"100719f78e1ee385583924cb15cb1f328b43b4af","instances":[{"path":"./src/activitypub/mocks.js","lines":[196,207],"code":"if (tag && Array.isArray(tag)) {\n\ttag\n\t\t.filter(tag => tag.type === 'Emoji' &&\n\t\t\tisEmojiShortcode.test(tag.name) &&\n\t\t\ttag.icon && tag.icon.mediaType && tag.icon.mediaType.startsWith('image/'))\n\t\t.forEach((tag) => {\n\t\t\tsummary = summary.replace(new RegExp(tag.name, 'g'), `<img class=\"not-responsive emoji\" src=\"${tag.icon.url}\" title=\"${tag.name}\" />`);\n\t\t});\n}\n\n// Add custom fields into user hash\nconst customFields = actor.attachment && Array.isArray(actor.attachment) && actor.attachment.length ?"},{"path":"./src/activitypub/mocks.js","lines":[308,318],"code":"if (tag && Array.isArray(tag)) {\n\ttag\n\t\t.filter(tag => tag.type === 'Emoji' &&\n\t\t\tisEmojiShortcode.test(tag.name) &&\n\t\t\ttag.icon && tag.icon.mediaType && tag.icon.mediaType.startsWith('image/'))\n\t\t.forEach((tag) => {\n\t\t\tsummary = summary.replace(new RegExp(tag.name, 'g'), `<img class=\"not-responsive emoji\" src=\"${tag.icon.url}\" title=\"${tag.name}\" />`);\n\t\t});\n}\n\nconst payload = {"}]},
{"id":"3c191928d7c15d051957a886c152ce57f33eaf82","instances":[{"path":"./src/api/activitypub.js","lines":[43,56],"code":"if (!acceptedTypes.includes(type) || !assertion || (Array.isArray(assertion) && assertion.length)) {\n\tthrow new Error('[[error:activitypub.invalid-id]]');\n}\n\nif (actor.includes('@')) {\n\tconst [uid, cid] = await Promise.all([\n\t\tuser.getUidByUserslug(actor),\n\t\tcategories.getCidByHandle(actor),\n\t]);\n\n\tactor = uid || cid;\n}\n\nconst isFollowing = await db.isSortedSetMember(type === 'uid' ? `followingRemote:${id}` : `cid:${id}:following`, actor);"},{"path":"./src/api/activitypub.js","lines":[80,93],"code":"if (!acceptedTypes.includes(type) || !assertion) {\n\tthrow new Error('[[error:activitypub.invalid-id]]');\n}\n\nif (actor.includes('@')) {\n\tconst [uid, cid] = await Promise.all([\n\t\tuser.getUidByUserslug(actor),\n\t\tcategories.getCidByHandle(actor),\n\t]);\n\n\tactor = uid || cid;\n}\n\nconst [isFollowing, isPending] = await Promise.all(["}]},
{"id":"365167741fb6754eb388265ef4fdc82c22374bbe","instances":[{"path":"./src/api/activitypub.js","lines":[65,69],"code":"await activitypub.send(type, id, [actor], {\n\tid: `${nconf.get('url')}/${type}/${id}#activity/follow/${encodeURIComponent(actor)}/${timestamp}`,\n\ttype: 'Follow',\n\tobject: actor,\n});"},{"path":"./src/api/activitypub.js","lines":[119,121],"code":"await activitypub.send(type, id, [actor], {\n\tid: `${nconf.get('url')}/${type}/${id}#activity/undo:follow/${encodeURIComponent(actor)}/${timestamp}`,\n\ttype: 'Undo',"}]},
{"id":"31f9d8a12ec3a9b64dccebf61e4409ebc15b9b5b","instances":[{"path":"./src/api/activitypub.js","lines":[126,130],"code":"if (type === 'uid') {\n\tawait Promise.all([\n\t\tdb.sortedSetRemove(`followingRemote:${id}`, actor),\n\t\tdb.sortedSetRemove(`followRequests:uid.${id}`, actor),\n\t\tdb.sortedSetRemove(`followersRemote:${actor}`, id),"},{"path":"./src/api/activitypub.js","lines":[133,139],"code":"} else if (type === 'cid') {\n\tawait Promise.all([\n\t\tdb.sortedSetRemove(`cid:${id}:following`, actor),\n\t\tdb.sortedSetRemove(`followRequests:cid.${id}`, actor),\n\t\tdb.sortedSetRemove(`followersRemote:${actor}`, `cid|${id}`),\n\t]);\n}"}]},
{"id":"397973d0f1c3972ee80396aedf582b56c3312634","instances":[{"path":"./src/api/activitypub.js","lines":[195,205],"code":"\tawait activitypub.send('uid', caller.uid, targets, {\n\t\tid: `${object.id}#activity/update/${Date.now()}`,\n\t\ttype: 'Update',\n\t\tactor: object.id,\n\t\tto: [activitypub._constants.publicAddress],\n\t\tcc: [],\n\t\tobject,\n\t});\n});\n\nactivitypubApi.update.category = enabledCheck(async (caller, { cid }) => {"},{"path":"./src/api/activitypub.js","lines":[211,221],"code":"\tawait activitypub.send('cid', cid, targets, {\n\t\tid: `${object.id}#activity/update/${Date.now()}`,\n\t\ttype: 'Update',\n\t\tactor: object.id,\n\t\tto: [activitypub._constants.publicAddress],\n\t\tcc: [],\n\t\tobject,\n\t});\n});\n\nactivitypubApi.update.note = enabledCheck(async (caller, { post }) => {"}]},
{"id":"1c9160be09a58ebbf6d9f9e218f0b051f06ea0a9","instances":[{"path":"./src/api/activitypub.js","lines":[404,415],"code":"activitypubApi.flag = enabledCheck(async (caller, flag) => {\n\tif (!activitypub.helpers.isUri(flag.targetId)) {\n\t\treturn;\n\t}\n\tconst reportedIds = [flag.targetId];\n\tif (flag.type === 'post' && activitypub.helpers.isUri(flag.targetUid)) {\n\t\treportedIds.push(flag.targetUid);\n\t}\n\tconst reason = flag.reason ||\n\t\t(flag.reports && flag.reports.filter(report => report.reporter.uid === caller.uid).at(-1).value);\n\tawait activitypub.send('uid', caller.uid, reportedIds, {\n\t\tid: `${nconf.get('url')}/${flag.type}/${encodeURIComponent(flag.targetId)}#activity/flag/${caller.uid}`,"},{"path":"./src/api/activitypub.js","lines":[452,463],"code":"activitypubApi.undo.flag = enabledCheck(async (caller, flag) => {\n\tif (!activitypub.helpers.isUri(flag.targetId)) {\n\t\treturn;\n\t}\n\tconst reportedIds = [flag.targetId];\n\tif (flag.type === 'post' && activitypub.helpers.isUri(flag.targetUid)) {\n\t\treportedIds.push(flag.targetUid);\n\t}\n\tconst reason = flag.reason ||\n\t\t(flag.reports && flag.reports.filter(report => report.reporter.uid === caller.uid).at(-1).value);\n\tawait activitypub.send('uid', caller.uid, reportedIds, {\n\t\tid: `${nconf.get('url')}/${flag.type}/${encodeURIComponent(flag.targetId)}#activity/undo:flag/${caller.uid}/${Date.now()}`,"}]},
{"id":"bb353ea7ac6d89dcc174bd2cc2677cf1c1431bdf","instances":[{"path":"./src/api/categories.js","lines":[167,180],"code":"await user.isAdminOrGlobalModOrSelf(caller.uid, targetUid);\nconst allCids = await categories.getAllCidsFromSet('categories:cid');\nconst categoryData = await categories.getCategoriesFields(allCids, ['cid', 'parentCid']);\n\n// filter to subcategories of cid\nlet cat;\ndo {\n\tcat = categoryData.find(c => !cids.includes(c.cid) && cids.includes(c.parentCid));\n\tif (cat) {\n\t\tcids.push(cat.cid);\n\t}\n} while (cat);\n\nawait user.setCategoryWatchState(targetUid, cids, state);"},{"path":"./src/socket.io/categories.js","lines":[118,131],"code":"await user.isAdminOrGlobalModOrSelf(socket.uid, targetUid);\nconst allCids = await categories.getAllCidsFromSet('categories:cid');\nconst categoryData = await categories.getCategoriesFields(allCids, ['cid', 'parentCid']);\n\n// filter to subcategories of cid\nlet cat;\ndo {\n\tcat = categoryData.find(c => !cids.includes(c.cid) && cids.includes(c.parentCid));\n\tif (cat) {\n\t\tcids.push(cat.cid);\n\t}\n} while (cat);\n\nawait fn(targetUid, cids);"}]},
{"id":"eb495176f14248927fb652adaf614a7131154d7f","instances":[{"path":"./src/api/groups.js","lines":[277,286],"code":"groupsAPI.accept = async (caller, { slug, uid }) => {\n\tconst groupName = await groups.getGroupNameByGroupSlug(slug);\n\n\tawait isOwner(caller, groupName);\n\tconst isPending = await groups.isPending(uid, groupName);\n\tif (!isPending) {\n\t\tthrow new Error('[[error:group-user-not-pending]]');\n\t}\n\n\tawait groups.acceptMembership(groupName, uid);"},{"path":"./src/api/groups.js","lines":[293,302],"code":"groupsAPI.reject = async (caller, { slug, uid }) => {\n\tconst groupName = await groups.getGroupNameByGroupSlug(slug);\n\n\tawait isOwner(caller, groupName);\n\tconst isPending = await groups.isPending(uid, groupName);\n\tif (!isPending) {\n\t\tthrow new Error('[[error:group-user-not-pending]]');\n\t}\n\n\tawait groups.rejectMembership(groupName, uid);"}]},
{"id":"04d92864a3bc16341bef71afc0ebaa883a18729a","instances":[{"path":"./src/api/posts.js","lines":[48,52],"code":"postsAPI.getIndex = async (caller, { pid, sort }) => {\n\tconst tid = await posts.getPostField(pid, 'tid');\n\tconst topicPrivileges = await privileges.topics.get(tid, caller.uid);\n\tif (!topicPrivileges.read || !topicPrivileges['topics:read']) {\n\t\treturn null;"},{"path":"./src/api/posts.js","lines":[58,62],"code":"postsAPI.getSummary = async (caller, { pid }) => {\n\tconst tid = await posts.getPostField(pid, 'tid');\n\tconst topicPrivileges = await privileges.topics.get(tid, caller.uid);\n\tif (!topicPrivileges.read || !topicPrivileges['topics:read']) {\n\t\treturn null;"}]},
{"id":"00b545583b86aa6b58b9be52db060ee7de2bd030","instances":[{"path":"./src/api/search.js","lines":[148,157],"code":"roomUsers.sort((a, b) => {\n\tif (a.isOwner && !b.isOwner) {\n\t\treturn -1;\n\t} else if (!a.isOwner && b.isOwner) {\n\t\treturn 1;\n\t}\n\treturn 0;\n});\n\nreturn { users: roomUsers };"},{"path":"./src/groups/search.js","lines":[79,87],"code":"results.users.sort((a, b) => {\n\tif (a.isOwner && !b.isOwner) {\n\t\treturn -1;\n\t} else if (!a.isOwner && b.isOwner) {\n\t\treturn 1;\n\t}\n\treturn 0;\n});\nreturn results;"}]},
{"id":"f50f7b5c2f7698b68d3b005212aa09ed4151a25e","instances":[{"path":"./src/api/topics.js","lines":[187,196],"code":"topicsAPI.updateTags = async (caller, { tid, tags }) => {\n\tif (!await privileges.topics.canEdit(tid, caller.uid)) {\n\t\tthrow new Error('[[error:no-privileges]]');\n\t}\n\n\tconst cid = await topics.getTopicField(tid, 'cid');\n\tawait topics.validateTags(tags, cid, caller.uid, tid);\n\tawait topics.updateTopicTags(tid, tags);\n\treturn await topics.getTopicTagsObjects(tid);\n};"},{"path":"./src/api/topics.js","lines":[198,205],"code":"topicsAPI.addTags = async (caller, { tid, tags }) => {\n\tif (!await privileges.topics.canEdit(tid, caller.uid)) {\n\t\tthrow new Error('[[error:no-privileges]]');\n\t}\n\n\tconst cid = await topics.getTopicField(tid, 'cid');\n\tawait topics.validateTags(tags, cid, caller.uid, tid);\n\ttags = await topics.filterTags(tags, cid);"}]},
{"id":"b24fb73b9f0568750c8d4ad7a07186eeee97f5c3","instances":[{"path":"./src/api/users.js","lines":[221,227],"code":"plugins.hooks.fire('action:user.banned', {\n\tcallerUid: caller.uid,\n\tip: caller.ip,\n\tuid: data.uid,\n\tuntil: data.until > 0 ? data.until : undefined,\n\treason: data.reason || undefined,\n});"},{"path":"./src/api/users.js","lines":[289,295],"code":"plugins.hooks.fire('action:user.muted', {\n\tcallerUid: caller.uid,\n\tip: caller.ip,\n\tuid: data.uid,\n\tuntil: data.until > 0 ? data.until : undefined,\n\treason: data.reason || undefined,\n});"}]},
{"id":"6b356a094b62802369c3ee79f884c4042d2b8856","instances":[{"path":"./src/api/users.js","lines":[330,334],"code":"usersAPI.generateToken = async (caller, { uid, description }) => {\n\tconst api = require('.');\n\tawait hasAdminPrivilege(caller.uid, 'settings');\n\tif (parseInt(uid, 10) !== parseInt(caller.uid, 10)) {\n\t\tthrow new Error('[[error:invalid-uid]]');"},{"path":"./src/api/users.js","lines":[341,345],"code":"usersAPI.deleteToken = async (caller, { uid, token }) => {\n\tconst api = require('.');\n\tawait hasAdminPrivilege(caller.uid, 'settings');\n\tif (parseInt(uid, 10) !== parseInt(caller.uid, 10)) {\n\t\tthrow new Error('[[error:invalid-uid]]');"}]},
{"id":"8e587cbc7a523e2f9d35e64947d8fdc17e288599","instances":[{"path":"./src/cache/lru.js","lines":[67,79],"code":"\treturn lruCache.has(key);\n};\n\ncache.set = function (key, value, ttl) {\n\tif (!cache.enabled) {\n\t\treturn;\n\t}\n\tconst opts = {};\n\tif (ttl) {\n\t\topts.ttl = ttl;\n\t}\n\tcacheSet.apply(lruCache, [key, value, opts]);\n};"},{"path":"./src/cache/ttl.js","lines":[40,52],"code":"\treturn ttlCache.has(key);\n};\n\ncache.set = function (key, value, ttl) {\n\tif (!cache.enabled) {\n\t\treturn;\n\t}\n\tconst opts = {};\n\tif (ttl) {\n\t\topts.ttl = ttl;\n\t}\n\tcacheSet.apply(ttlCache, [key, value, opts]);\n};"}]},
{"id":"0ea97d7c3d699d4cad5eb4de75247269868d01dc","instances":[{"path":"./src/cache/lru.js","lines":[85,100],"code":"\tconst data = lruCache.get(key);\n\tif (data === undefined) {\n\t\tcache.misses += 1;\n\t} else {\n\t\tcache.hits += 1;\n\t}\n\treturn data;\n};\n\ncache.del = function (keys) {\n\tif (!Array.isArray(keys)) {\n\t\tkeys = [keys];\n\t}\n\tpubsub.publish(`${cache.name}:lruCache:del`, keys);\n\tkeys.forEach(key => lruCache.delete(key));\n};"},{"path":"./src/cache/ttl.js","lines":[58,73],"code":"\tconst data = ttlCache.get(key);\n\tif (data === undefined) {\n\t\tcache.misses += 1;\n\t} else {\n\t\tcache.hits += 1;\n\t}\n\treturn data;\n};\n\ncache.del = function (keys) {\n\tif (!Array.isArray(keys)) {\n\t\tkeys = [keys];\n\t}\n\tpubsub.publish(`${cache.name}:ttlCache:del`, keys);\n\tkeys.forEach(key => ttlCache.delete(key));\n};"}]},
{"id":"f061f9351ed2b7ead9b84a350b294dc7d3ea1dd3","instances":[{"path":"./src/cache/lru.js","lines":[99,112],"code":"\tkeys.forEach(key => lruCache.delete(key));\n};\ncache.delete = cache.del;\n\ncache.reset = function () {\n\tpubsub.publish(`${cache.name}:lruCache:reset`, {\n\t\tid: `${os.hostname()}:${process.pid}`,\n\t});\n\tlocalReset();\n};\ncache.clear = cache.reset;\n\nfunction localReset() {\n\tlruCache.clear();"},{"path":"./src/cache/ttl.js","lines":[72,85],"code":"\tkeys.forEach(key => ttlCache.delete(key));\n};\ncache.delete = cache.del;\n\ncache.reset = function () {\n\tpubsub.publish(`${cache.name}:ttlCache:reset`, {\n\t\tid: `${os.hostname()}:${process.pid}`,\n\t});\n\tlocalReset();\n};\ncache.clear = cache.reset;\n\nfunction localReset() {\n\tttlCache.clear();"}]},
{"id":"87c190caf54d4d2659723dbe588ed8ed73d3578f","instances":[{"path":"./src/cache/lru.js","lines":[112,127],"code":"\tlruCache.clear();\n\tcache.hits = 0;\n\tcache.misses = 0;\n}\n\npubsub.on(`${cache.name}:lruCache:reset`, ({ id }) => {\n\tif (id !== `${os.hostname()}:${process.pid}`) {\n\t\tlocalReset();\n\t}\n});\n\npubsub.on(`${cache.name}:lruCache:del`, (keys) => {\n\tif (Array.isArray(keys)) {\n\t\tkeys.forEach(key => lruCache.delete(key));\n\t}\n});"},{"path":"./src/cache/ttl.js","lines":[85,100],"code":"\tttlCache.clear();\n\tcache.hits = 0;\n\tcache.misses = 0;\n}\n\npubsub.on(`${cache.name}:ttlCache:reset`, ({ id }) => {\n\tif (id !== `${os.hostname()}:${process.pid}`) {\n\t\tlocalReset();\n\t}\n});\n\npubsub.on(`${cache.name}:ttlCache:del`, (keys) => {\n\tif (Array.isArray(keys)) {\n\t\tkeys.forEach(key => ttlCache.delete(key));\n\t}\n});"}]},
{"id":"08b91f7e72bef5c9cf6721459cbdd4abe967e853","instances":[{"path":"./src/cache/lru.js","lines":[125,153],"code":"\t\tkeys.forEach(key => lruCache.delete(key));\n\t}\n});\n\ncache.getUnCachedKeys = function (keys, cachedData) {\n\tif (!cache.enabled) {\n\t\treturn keys;\n\t}\n\tlet data;\n\tlet isCached;\n\tconst unCachedKeys = keys.filter((key) => {\n\t\tdata = cache.get(key);\n\t\tisCached = data !== undefined;\n\t\tif (isCached) {\n\t\t\tcachedData[key] = data;\n\t\t}\n\t\treturn !isCached;\n\t});\n\n\tconst hits = keys.length - unCachedKeys.length;\n\tconst misses = keys.length - hits;\n\tcache.hits += hits;\n\tcache.misses += misses;\n\treturn unCachedKeys;\n};\n\ncache.dump = function () {\n\treturn lruCache.dump();\n};"},{"path":"./src/cache/ttl.js","lines":[98,126],"code":"\t\tkeys.forEach(key => ttlCache.delete(key));\n\t}\n});\n\ncache.getUnCachedKeys = function (keys, cachedData) {\n\tif (!cache.enabled) {\n\t\treturn keys;\n\t}\n\tlet data;\n\tlet isCached;\n\tconst unCachedKeys = keys.filter((key) => {\n\t\tdata = cache.get(key);\n\t\tisCached = data !== undefined;\n\t\tif (isCached) {\n\t\t\tcachedData[key] = data;\n\t\t}\n\t\treturn !isCached;\n\t});\n\n\tconst hits = keys.length - unCachedKeys.length;\n\tconst misses = keys.length - hits;\n\tcache.hits += hits;\n\tcache.misses += misses;\n\treturn unCachedKeys;\n};\n\ncache.dump = function () {\n\treturn Array.from(ttlCache.entries());\n};"}]},
{"id":"8ef1638393eb590b692df2faee9fd6bf883b0472","instances":[{"path":"./src/categories/icon.js","lines":[26,29],"code":"return new Map(Object.entries({\n\tsvg: `${nconf.get('upload_url')}/category/category-${cid}-icon.svg`,\n\tpng: `${nconf.get('upload_url')}/category/category-${cid}-icon.png`,\n}));"},{"path":"./src/categories/icon.js","lines":[105,108],"code":"return new Map(Object.entries({\n\tsvg: `${nconf.get('upload_url')}/category/category-${cid}-icon.svg`,\n\tpng: `${nconf.get('upload_url')}/category/category-${cid}-icon.png`,\n}));"}]},
{"id":"a5fe8aed045f69c55d41ff6a450465571a495f1d","instances":[{"path":"./src/categories/search.js","lines":[51,54],"code":"categoryData.forEach((category) => {\n\tif (category && Array.isArray(category.children)) {\n\t\tcategory.children = category.children.slice(0, category.subCategoriesPerPage);\n\t\tcategory.children.forEach((child) => {"},{"path":"./src/controllers/helpers.js","lines":[378,381],"code":"helpers.trimChildren = function (category) {\n\tif (category && Array.isArray(category.children)) {\n\t\tcategory.children = category.children.slice(0, category.subCategoriesPerPage);\n\t\tcategory.children.forEach((child) => {"}]},
{"id":"e82614f850608fe40af8b8b57ce559a84f0d94dd","instances":[{"path":"./src/categories/topics.js","lines":[94,101],"code":"const sort = data.sort || (data.settings && data.settings.categoryTopicSort) || meta.config.categoryTopicSort || 'recently_replied';\nconst sortToSet = {\n\trecently_replied: `cid:${cid}:tids`,\n\trecently_created: `cid:${cid}:tids:create`,\n\tmost_posts: `cid:${cid}:tids:posts`,\n\tmost_votes: `cid:${cid}:tids:votes`,\n\tmost_views: `cid:${cid}:tids:views`,\n};"},{"path":"./src/categories/topics.js","lines":[263,270],"code":"sort = sort || meta.config.categoryTopicSort || 'recently_replied';\nconst sortToSet = {\n\trecently_replied: `cid:${cid}:tids`,\n\trecently_created: `cid:${cid}:tids:create`,\n\tmost_posts: `cid:${cid}:tids:posts`,\n\tmost_votes: `cid:${cid}:tids:votes`,\n\tmost_views: `cid:${cid}:tids:views`,\n};"}]},
{"id":"0a0fb257646c1812fc7140c438de2bf62cc9c541","instances":[{"path":"./src/cli/manage.js","lines":[21,31],"code":"try {\n\tawait db.init();\n\tif (!pluginNamePattern.test(plugin)) {\n\t\t// Allow omission of `nodebb-plugin-`\n\t\tplugin = `nodebb-plugin-${plugin}`;\n\t}\n\n\tplugin = await plugins.autocomplete(plugin);\n\n\tconst isInstalled = await plugins.isInstalled(plugin);\n\tif (isInstalled) {"},{"path":"./src/cli/manage.js","lines":[60,70],"code":"try {\n\tawait db.init();\n\tif (!pluginNamePattern.test(plugin)) {\n\t\t// Allow omission of `nodebb-plugin-`\n\t\tplugin = `nodebb-plugin-${plugin}`;\n\t}\n\n\tplugin = await plugins.autocomplete(plugin);\n\n\tconst isInstalled = await plugins.isInstalled(plugin);\n\tif (!isInstalled) {"}]},
{"id":"ce216f171da183285cd0bd6c76d74a6f15d6f732","instances":[{"path":"./src/controllers/category.js","lines":[256,262],"code":"if (meta.config.activitypubEnabled) {\n\tres.locals.linkTags.push({\n\t\trel: 'alternate',\n\t\ttype: 'application/activity+json',\n\t\thref: `${nconf.get('url')}/actegory/${categoryData.cid}`,\n\t});\n}"},{"path":"./src/controllers/accounts/profile.js","lines":[171,177],"code":"if (meta.config.activitypubEnabled) {\n\tres.locals.linkTags.push({\n\t\trel: 'alternate',\n\t\ttype: 'application/activity+json',\n\t\thref: `${nconf.get('url')}/uid/${userData.uid}`,\n\t});\n}"}]},
{"id":"dbf9e355547e5ecade0764a63a6709c332914e8c","instances":[{"path":"./src/controllers/popular.js","lines":[24,31],"code":"if (!data['feeds:disableRSS'] && data.rssFeedUrl) {\n\tconst feedQs = data.rssFeedUrl.split('?')[1];\n\tdata.rssFeedUrl = `${nconf.get('relative_path')}/popular/${validator.escape(String(req.query.term || 'alltime'))}.rss`;\n\tif (req.loggedIn) {\n\t\tdata.rssFeedUrl += `?${feedQs}`;\n\t}\n}\nres.render('popular', data);"},{"path":"./src/controllers/top.js","lines":[22,30],"code":"if (!data['feeds:disableRSS'] && data.rssFeedUrl) {\n\tconst feedQs = data.rssFeedUrl.split('?')[1];\n\tdata.rssFeedUrl = `${nconf.get('relative_path')}/top/${validator.escape(String(req.query.term || 'alltime'))}.rss`;\n\tif (req.loggedIn) {\n\t\tdata.rssFeedUrl += `?${feedQs}`;\n\t}\n}\n\nres.render('top', data);"}]},
{"id":"4de079fec49f40ea4421928f148e7cae1b06410a","instances":[{"path":"./src/controllers/uploads.js","lines":[69,75],"code":"if (plugins.hooks.hasListeners('filter:uploadImage')) {\n\treturn await plugins.hooks.fire('filter:uploadImage', {\n\t\timage: uploadedFile,\n\t\tuid: req.uid,\n\t\tfolder: 'files',\n\t});\n}"},{"path":"./src/controllers/uploads.js","lines":[146,152],"code":"if (plugins.hooks.hasListeners('filter:uploadImage')) {\n\treturn await plugins.hooks.fire('filter:uploadImage', {\n\t\timage: uploadedFile,\n\t\tuid: req.uid,\n\t\tfolder: 'files',\n\t});\n}"}]},
{"id":"2e23a3ac6d294ead861ebae2fd8185442a20a4ee","instances":[{"path":"./src/controllers/activitypub/index.js","lines":[67,87],"code":"\t\tmethod: user.getFollowing.bind(null, req.params.uid),\n\t\tcount,\n\t\tperPage: 50,\n\t\tpage: req.query.page,\n\t\turl: `${nconf.get('url')}/uid/${req.params.uid}/following`,\n\t});\n\n\tif (collection.hasOwnProperty('orderedItems')) {\n\t\tcollection.orderedItems = collection.orderedItems.map(({ uid }) => {\n\t\t\tif (utils.isNumber(uid)) {\n\t\t\t\treturn `${nconf.get('url')}/uid/${uid}`;\n\t\t\t}\n\n\t\t\treturn uid;\n\t\t});\n\t}\n\n\tres.status(200).json(collection);\n};\n\nController.getFollowers = async (req, res) => {"},{"path":"./src/controllers/activitypub/index.js","lines":[93,113],"code":"\t\tmethod: user.getFollowers.bind(null, req.params.uid),\n\t\tcount,\n\t\tperPage: 50,\n\t\tpage: req.query.page,\n\t\turl: `${nconf.get('url')}/uid/${req.params.uid}/followers`,\n\t});\n\n\tif (collection.hasOwnProperty('orderedItems')) {\n\t\tcollection.orderedItems = collection.orderedItems.map(({ uid }) => {\n\t\t\tif (utils.isNumber(uid)) {\n\t\t\t\treturn `${nconf.get('url')}/uid/${uid}`;\n\t\t\t}\n\n\t\t\treturn uid;\n\t\t});\n\t}\n\n\tres.status(200).json(collection);\n};\n\nController.getOutbox = async (req, res) => {"}]},
{"id":"6b14af97e26292e6215de8a91f91a02aab676951","instances":[{"path":"./src/controllers/admin/dashboard.js","lines":[291,304],"code":"stats = stats.filter(stat => stat.name === '[[admin/dashboard:new-users]]').map(({ ...stat }) => {\n\tdelete stat.href;\n\treturn stat;\n});\nconst summary = {\n\tday: stats[0].today,\n\tweek: stats[0].thisweek,\n\tmonth: stats[0].thismonth,\n};\n\n// List of users registered within time frame\nconst end = parseInt(req.query.until, 10) || Date.now();\nconst start = end - (1000 * 60 * 60 * (req.query.units === 'days' ? 24 : 1) * (req.query.count || (req.query.units === 'days' ? 30 : 24)));\nconst uids = await db.getSortedSetRangeByScore('users:joindate', 0, 500, start, end);"},{"path":"./src/controllers/admin/dashboard.js","lines":[318,331],"code":"stats = stats.filter(stat => stat.name === '[[admin/dashboard:topics]]').map(({ ...stat }) => {\n\tdelete stat.href;\n\treturn stat;\n});\nconst summary = {\n\tday: stats[0].today,\n\tweek: stats[0].thisweek,\n\tmonth: stats[0].thismonth,\n};\n\n// List of topics created within time frame\nconst end = parseInt(req.query.until, 10) || Date.now();\nconst start = end - (1000 * 60 * 60 * (req.query.units === 'days' ? 24 : 1) * (req.query.count || (req.query.units === 'days' ? 30 : 24)));\nconst tids = await db.getSortedSetRangeByScore('topics:tid', 0, 500, start, end);"}]},
{"id":"81daa3e10da7c16da21ada36142bc8de0bbe9294","instances":[{"path":"./src/controllers/admin/uploads.js","lines":[152,157],"code":"try {\n\tparams = JSON.parse(req.body.params);\n} catch (e) {\n\tfile.delete(uploadedFile.path);\n\treturn next(new Error('[[error:invalid-json]]'));\n}"},{"path":"./src/controllers/admin/uploads.js","lines":[224,229],"code":"try {\n\tparams = JSON.parse(req.body.params);\n} catch (e) {\n\tfile.delete(uploadedFile.path);\n\treturn next(new Error('[[error:invalid-json]]'));\n}"}]},
{"id":"1a3652dc7567838dd20b987df6858832b37e08cf","instances":[{"path":"./src/controllers/admin/users.js","lines":[29,38],"code":"async function getUsers(req, res) {\n\tconst sortDirection = req.query.sortDirection || 'desc';\n\tconst reverse = sortDirection === 'desc';\n\n\tconst page = parseInt(req.query.page, 10) || 1;\n\tlet resultsPerPage = parseInt(req.query.resultsPerPage, 10) || 50;\n\tif (![50, 100, 250, 500].includes(resultsPerPage)) {\n\t\tresultsPerPage = 50;\n\t}\n\tlet sortBy = validator.escape(req.query.sortBy || '');"},{"path":"./src/controllers/admin/users.js","lines":[119,128],"code":"usersController.search = async function (req, res) {\n\tconst sortDirection = req.query.sortDirection || 'desc';\n\tconst reverse = sortDirection === 'desc';\n\tconst page = parseInt(req.query.page, 10) || 1;\n\tlet resultsPerPage = parseInt(req.query.resultsPerPage, 10) || 50;\n\tif (![50, 100, 250, 500].includes(resultsPerPage)) {\n\t\tresultsPerPage = 50;\n\t}\n\n\tconst searchData = await user.search({"}]},
{"id":"f760b82f10489144f50bb87a5e115b41dcc51277","instances":[{"path":"./src/controllers/admin/users.js","lines":[305,307],"code":"usersController.customFields = async function (req, res) {\n\tconst keys = await db.getSortedSetRange('user-custom-fields', 0, -1);\n\tconst fields = (await db.getObjects(keys.map(k => `user-custom-field:${k}`))).filter(Boolean);"},{"path":"./src/user/profile.js","lines":[94,96],"code":"async function validateCustomFields(data) {\n\tconst keys = await db.getSortedSetRange('user-custom-fields', 0, -1);\n\tconst fields = (await db.getObjects(keys.map(k => `user-custom-field:${k}`))).filter(Boolean);"}]},
{"id":"54e435fc47d1c99da407dc584056bdd8d4e9ecff","instances":[{"path":"./src/controllers/write/categories.js","lines":[109,117],"code":"Categories.follow = async (req, res, next) => {\n\tconst { actor } = req.body;\n\tconst id = parseInt(req.params.cid, 10);\n\n\tif (!id) { // disallow cid 0\n\t\treturn next();\n\t}\n\n\tawait api.activitypub.follow(req, {"},{"path":"./src/controllers/write/categories.js","lines":[126,134],"code":"Categories.unfollow = async (req, res, next) => {\n\tconst { actor } = req.body;\n\tconst id = parseInt(req.params.cid, 10);\n\n\tif (!id) { // disallow cid 0\n\t\treturn next();\n\t}\n\n\tawait api.activitypub.unfollow(req, {"}]},
{"id":"ca723119c6087b6a9f768de7da2109e52314bf99","instances":[{"path":"./src/database/postgres.js","lines":[94,177],"code":"\t\tif (!res.rows[0].b) {\n\t\t\tawait client.query(`\nCREATE TYPE LEGACY_OBJECT_TYPE AS ENUM (\n\t'hash', 'zset', 'set', 'list', 'string'\n)`);\n\t\t\tawait client.query(`\nCREATE TABLE \"legacy_object\" (\n\t\"_key\" TEXT NOT NULL\n\t\tPRIMARY KEY,\n\t\"type\" LEGACY_OBJECT_TYPE NOT NULL,\n\t\"expireAt\" TIMESTAMPTZ DEFAULT NULL,\n\tUNIQUE ( \"_key\", \"type\" )\n)`);\n\t\t\tawait client.query(`\nCREATE TABLE \"legacy_hash\" (\n\t\"_key\" TEXT NOT NULL\n\t\tPRIMARY KEY,\n\t\"data\" JSONB NOT NULL,\n\t\"type\" LEGACY_OBJECT_TYPE NOT NULL\n\t\tDEFAULT 'hash'::LEGACY_OBJECT_TYPE\n\t\tCHECK ( \"type\" = 'hash' ),\n\tCONSTRAINT \"fk__legacy_hash__key\"\n\t\tFOREIGN KEY (\"_key\", \"type\")\n\t\tREFERENCES \"legacy_object\"(\"_key\", \"type\")\n\t\tON UPDATE CASCADE\n\t\tON DELETE CASCADE\n)`);\n\t\t\tawait client.query(`\nCREATE TABLE \"legacy_zset\" (\n\t\"_key\" TEXT NOT NULL,\n\t\"value\" TEXT NOT NULL,\n\t\"score\" NUMERIC NOT NULL,\n\t\"type\" LEGACY_OBJECT_TYPE NOT NULL\n\t\tDEFAULT 'zset'::LEGACY_OBJECT_TYPE\n\t\tCHECK ( \"type\" = 'zset' ),\n\tPRIMARY KEY (\"_key\", \"value\"),\n\tCONSTRAINT \"fk__legacy_zset__key\"\n\t\tFOREIGN KEY (\"_key\", \"type\")\n\t\tREFERENCES \"legacy_object\"(\"_key\", \"type\")\n\t\tON UPDATE CASCADE\n\t\tON DELETE CASCADE\n)`);\n\t\t\tawait client.query(`\nCREATE TABLE \"legacy_set\" (\n\t\"_key\" TEXT NOT NULL,\n\t\"member\" TEXT NOT NULL,\n\t\"type\" LEGACY_OBJECT_TYPE NOT NULL\n\t\tDEFAULT 'set'::LEGACY_OBJECT_TYPE\n\t\tCHECK ( \"type\" = 'set' ),\n\tPRIMARY KEY (\"_key\", \"member\"),\n\tCONSTRAINT \"fk__legacy_set__key\"\n\t\tFOREIGN KEY (\"_key\", \"type\")\n\t\tREFERENCES \"legacy_object\"(\"_key\", \"type\")\n\t\tON UPDATE CASCADE\n\t\tON DELETE CASCADE\n)`);\n\t\t\tawait client.query(`\nCREATE TABLE \"legacy_list\" (\n\t\"_key\" TEXT NOT NULL\n\t\tPRIMARY KEY,\n\t\"array\" TEXT[] NOT NULL,\n\t\"type\" LEGACY_OBJECT_TYPE NOT NULL\n\t\tDEFAULT 'list'::LEGACY_OBJECT_TYPE\n\t\tCHECK ( \"type\" = 'list' ),\n\tCONSTRAINT \"fk__legacy_list__key\"\n\t\tFOREIGN KEY (\"_key\", \"type\")\n\t\tREFERENCES \"legacy_object\"(\"_key\", \"type\")\n\t\tON UPDATE CASCADE\n\t\tON DELETE CASCADE\n)`);\n\t\t\tawait client.query(`\nCREATE TABLE \"legacy_string\" (\n\t\"_key\" TEXT NOT NULL\n\t\tPRIMARY KEY,\n\t\"data\" TEXT NOT NULL,\n\t\"type\" LEGACY_OBJECT_TYPE NOT NULL\n\t\tDEFAULT 'string'::LEGACY_OBJECT_TYPE\n\t\tCHECK ( \"type\" = 'string' ),\n\tCONSTRAINT \"fk__legacy_string__key\"\n\t\tFOREIGN KEY (\"_key\", \"type\")\n\t\tREFERENCES \"legacy_object\"(\"_key\", \"type\")\n\t\tON UPDATE CASCADE\n\t\tON DELETE CASCADE\n)`);"},{"path":"./src/database/postgres.js","lines":[179,267],"code":"\t\t\tif (res.rows[0].a) {\n\t\t\t\tawait client.query(`\nINSERT INTO \"legacy_object\" (\"_key\", \"type\", \"expireAt\")\nSELECT DISTINCT \"data\"->>'_key',\n                CASE WHEN (SELECT COUNT(*)\n                             FROM jsonb_object_keys(\"data\" - 'expireAt')) = 2\n                     THEN CASE WHEN (\"data\" ? 'value')\n                                 OR (\"data\" ? 'data')\n                               THEN 'string'\n                               WHEN \"data\" ? 'array'\n                               THEN 'list'\n                               WHEN \"data\" ? 'members'\n                               THEN 'set'\n                               ELSE 'hash'\n                          END\n                     WHEN (SELECT COUNT(*)\n                             FROM jsonb_object_keys(\"data\" - 'expireAt')) = 3\n                     THEN CASE WHEN (\"data\" ? 'value')\n                                AND (\"data\" ? 'score')\n                               THEN 'zset'\n                               ELSE 'hash'\n                          END\n                     ELSE 'hash'\n                END::LEGACY_OBJECT_TYPE,\n                CASE WHEN (\"data\" ? 'expireAt')\n                     THEN to_timestamp((\"data\"->>'expireAt')::double precision / 1000)\n                     ELSE NULL\n                END\n  FROM \"objects\"`);\n\t\t\t\tawait client.query(`\nINSERT INTO \"legacy_hash\" (\"_key\", \"data\")\nSELECT \"data\"->>'_key',\n       \"data\" - '_key' - 'expireAt'\n  FROM \"objects\"\n WHERE CASE WHEN (SELECT COUNT(*)\n                    FROM jsonb_object_keys(\"data\" - 'expireAt')) = 2\n            THEN NOT ((\"data\" ? 'value')\n                   OR (\"data\" ? 'data')\n                   OR (\"data\" ? 'members')\n                   OR (\"data\" ? 'array'))\n            WHEN (SELECT COUNT(*)\n                    FROM jsonb_object_keys(\"data\" - 'expireAt')) = 3\n            THEN NOT ((\"data\" ? 'value')\n                  AND (\"data\" ? 'score'))\n            ELSE TRUE\n       END`);\n\t\t\t\tawait client.query(`\nINSERT INTO \"legacy_zset\" (\"_key\", \"value\", \"score\")\nSELECT \"data\"->>'_key',\n       \"data\"->>'value',\n       (\"data\"->>'score')::NUMERIC\n  FROM \"objects\"\n WHERE (SELECT COUNT(*)\n          FROM jsonb_object_keys(\"data\" - 'expireAt')) = 3\n   AND (\"data\" ? 'value')\n   AND (\"data\" ? 'score')`);\n\t\t\t\tawait client.query(`\nINSERT INTO \"legacy_set\" (\"_key\", \"member\")\nSELECT \"data\"->>'_key',\n       jsonb_array_elements_text(\"data\"->'members')\n  FROM \"objects\"\n WHERE (SELECT COUNT(*)\n          FROM jsonb_object_keys(\"data\" - 'expireAt')) = 2\n   AND (\"data\" ? 'members')`);\n\t\t\t\tawait client.query(`\nINSERT INTO \"legacy_list\" (\"_key\", \"array\")\nSELECT \"data\"->>'_key',\n       ARRAY(SELECT t\n               FROM jsonb_array_elements_text(\"data\"->'list') WITH ORDINALITY l(t, i)\n              ORDER BY i ASC)\n  FROM \"objects\"\n WHERE (SELECT COUNT(*)\n          FROM jsonb_object_keys(\"data\" - 'expireAt')) = 2\n   AND (\"data\" ? 'array')`);\n\t\t\t\tawait client.query(`\nINSERT INTO \"legacy_string\" (\"_key\", \"data\")\nSELECT \"data\"->>'_key',\n       CASE WHEN \"data\" ? 'value'\n            THEN \"data\"->>'value'\n            ELSE \"data\"->>'data'\n       END\n  FROM \"objects\"\n WHERE (SELECT COUNT(*)\n          FROM jsonb_object_keys(\"data\" - 'expireAt')) = 2\n   AND ((\"data\" ? 'value')\n     OR (\"data\" ? 'data'))`);\n\t\t\t\tawait client.query(`DROP TABLE \"objects\" CASCADE`);\n\t\t\t\tawait client.query(`DROP FUNCTION \"fun__objects__expireAt\"() CASCADE`);\n\t\t\t}"}]},
{"id":"8008fc1775208be80647b8420eae53ac4784a4d3","instances":[{"path":"./src/database/mongo/hash.js","lines":[89,104],"code":"\tconst data = await module.getObjects([key], fields);\n\treturn data && data.length ? data[0] : null;\n};\n\nmodule.getObjects = async function (keys, fields = []) {\n\treturn await module.getObjectsFields(keys, fields);\n};\n\nmodule.getObjectField = async function (key, field) {\n\tif (!key) {\n\t\treturn null;\n\t}\n\tconst cachedData = {};\n\tcache.getUnCachedKeys([key], cachedData);\n\tif (cachedData[key]) {\n\t\treturn cachedData[key].hasOwnProperty(field) ? cachedData[key][field] : null;"},{"path":"./src/database/redis/hash.js","lines":[80,95],"code":"\tconst data = await module.getObjectsFields([key], fields);\n\treturn data && data.length ? data[0] : null;\n};\n\nmodule.getObjects = async function (keys, fields = []) {\n\treturn await module.getObjectsFields(keys, fields);\n};\n\nmodule.getObjectField = async function (key, field) {\n\tif (!key) {\n\t\treturn null;\n\t}\n\tconst cachedData = {};\n\tcache.getUnCachedKeys([key], cachedData);\n\tif (cachedData[key]) {\n\t\treturn cachedData[key].hasOwnProperty(field) ? cachedData[key][field] : null;"}]},
{"id":"c995945376f28cba87ef654a01c536d7a3851077","instances":[{"path":"./src/database/mongo/hash.js","lines":[119,127],"code":"\treturn data ? data[0] : null;\n};\n\nmodule.getObjectsFields = async function (keys, fields) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\tconst cachedData = {};\n\tconst unCachedKeys = cache.getUnCachedKeys(keys, cachedData);"},{"path":"./src/database/redis/hash.js","lines":[105,114],"code":"\treturn results ? results[0] : null;\n};\n\nmodule.getObjectsFields = async function (keys, fields) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn [];\n\t}\n\n\tconst cachedData = {};\n\tconst unCachedKeys = cache.getUnCachedKeys(keys, cachedData);"}]},
{"id":"2f4e8670460ca34664ce051ed8c32df2ab893c09","instances":[{"path":"./src/database/mongo/hash.js","lines":[138,156],"code":"\t\t\tcachedData[key] = map[key] || null;\n\t\t\tcache.set(key, cachedData[key]);\n\t\t});\n\t}\n\n\tif (!Array.isArray(fields) || !fields.length) {\n\t\treturn keys.map(key => (cachedData[key] ? { ...cachedData[key] } : null));\n\t}\n\treturn keys.map((key) => {\n\t\tconst item = cachedData[key] || {};\n\t\tconst result = {};\n\t\tfields.forEach((field) => {\n\t\t\tresult[field] = item[field] !== undefined ? item[field] : null;\n\t\t});\n\t\treturn result;\n\t});\n};\n\nmodule.getObjectKeys = async function (key) {"},{"path":"./src/database/redis/hash.js","lines":[134,153],"code":"\t\tcachedData[key] = data[i] || null;\n\t\tcache.set(key, cachedData[key]);\n\t});\n\n\tif (!Array.isArray(fields) || !fields.length) {\n\t\treturn keys.map(key => (cachedData[key] ? { ...cachedData[key] } : null));\n\t}\n\treturn keys.map((key) => {\n\t\tconst item = cachedData[key] || {};\n\t\tconst result = {};\n\t\tfields.forEach((field) => {\n\t\t\tresult[field] = item[field] !== undefined ? item[field] : null;\n\t\t});\n\t\treturn result;\n\t});\n};\n\nmodule.getObjectKeys = async function (key) {\n\treturn await module.client.hkeys(key);\n};"}]},
{"id":"2e2fef2d2f42db8ec5e95e4d8bb3a56ed4a23ffb","instances":[{"path":"./src/database/mongo/main.js","lines":[84,93],"code":"if (!keys || !Array.isArray(keys) || !keys.length) {\n\treturn [];\n}\n\nconst data = await module.client.collection('objects').find(\n\t{ _key: { $in: keys } },\n\t{ projection: { _id: 0 } }\n).toArray();\n\nconst map = {};"},{"path":"./src/database/mongo/sets.js","lines":[161,170],"code":"if (!Array.isArray(keys) || !keys.length) {\n\treturn [];\n}\nconst data = await module.client.collection('objects').find({\n\t_key: { $in: keys },\n}, {\n\tprojection: { _id: 0 },\n}).toArray();\n\nconst sets = {};"}]},
{"id":"e0f4315499a80d92c46cd46ecf6b447d60d664e8","instances":[{"path":"./src/database/mongo/sets.js","lines":[38,47],"code":"module.setsAdd = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\n\tif (!Array.isArray(value)) {\n\t\tvalue = [value];\n\t}\n\n\tvalue = value.map(v => helpers.valueToString(v));"},{"path":"./src/database/postgres/sets.js","lines":[30,39],"code":"module.setsAdd = async function (keys, value) {\n\tif (!Array.isArray(keys) || !keys.length) {\n\t\treturn;\n\t}\n\n\tif (!Array.isArray(value)) {\n\t\tvalue = [value];\n\t}\n\n\tkeys = _.uniq(keys);"}]},
{"id":"f87893b1df75328547ba98d088183f0a04c6cdc1","instances":[{"path":"./src/database/mongo/sets.js","lines":[112,116],"code":"module.isSetMembers = async function (key, values) {\n\tif (!key || !Array.isArray(values) || !values.length) {\n\t\treturn [];\n\t}\n\tvalues = values.map(v => helpers.valueToString(v));"},{"path":"./src/database/postgres/sets.js","lines":[112,117],"code":"module.isSetMembers = async function (key, values) {\n\tif (!key || !Array.isArray(values) || !values.length) {\n\t\treturn [];\n\t}\n\n\tvalues = values.map(helpers.valueToString);"}]},
{"id":"22cf80beb822f62a3049c859d904773bf2a2748e","instances":[{"path":"./src/database/mongo/sorted.js","lines":[68,83],"code":"let reverse = false;\nif (start === 0 && stop < -1) {\n\treverse = true;\n\tsort *= -1;\n\tstart = Math.abs(stop + 1);\n\tstop = -1;\n} else if (start < 0 && stop > start) {\n\tconst tmp1 = Math.abs(stop + 1);\n\tstop = Math.abs(start + 1);\n\tstart = tmp1;\n}\n\nlet limit = stop - start + 1;\nif (limit <= 0) {\n\tlimit = 0;\n}"},{"path":"./src/database/postgres/sorted.js","lines":[44,59],"code":"let reverse = false;\nif (start === 0 && stop < -1) {\n\treverse = true;\n\tsort *= -1;\n\tstart = Math.abs(stop + 1);\n\tstop = -1;\n} else if (start < 0 && stop > start) {\n\tconst tmp1 = Math.abs(stop + 1);\n\tstop = Math.abs(start + 1);\n\tstart = tmp1;\n}\n\nlet limit = stop - start + 1;\nif (limit <= 0) {\n\tlimit = null;\n}"}]},
{"id":"ccfbe5c27a256b0b241f2b7cf320695065a43eb7","instances":[{"path":"./src/database/mongo/sorted.js","lines":[138,144],"code":"async function getSortedSetRangeByScore(key, start, count, min, max, sort, withScores) {\n\tif (parseInt(count, 10) === 0) {\n\t\treturn [];\n\t}\n\tconst stop = (parseInt(count, 10) === -1) ? -1 : (start + count - 1);\n\treturn await getSortedSetRange(key, start, stop, min, max, sort, withScores);\n}"},{"path":"./src/database/redis/sorted.js","lines":[94,100],"code":"async function sortedSetRangeByScore(method, key, start, count, min, max, withScores) {\n\tif (parseInt(count, 10) === 0) {\n\t\treturn [];\n\t}\n\tconst stop = (parseInt(count, 10) === -1) ? -1 : (start + count - 1);\n\treturn await sortedSetRange(method, key, start, stop, min, max, withScores);\n}"}]},
{"id":"ef2e7b966c7bdb34a21c8adeeb0653762818f3b1","instances":[{"path":"./src/database/mongo/sorted.js","lines":[292,303],"code":"\treturn keys.map(key => (map[key] ? map[key].score : null));\n};\n\nmodule.sortedSetScores = async function (key, values) {\n\tif (!key) {\n\t\treturn null;\n\t}\n\tif (!values.length) {\n\t\treturn [];\n\t}\n\tvalues = values.map(helpers.valueToString);\n\tconst result = await module.client.collection('objects').find({ _key: key, value: { $in: values } }, { projection: { _id: 0, _key: 0 } }).toArray();"},{"path":"./src/database/postgres/sorted.js","lines":[376,389],"code":"\t\treturn s ? parseFloat(s.s) : null;\n\t});\n};\n\nmodule.sortedSetScores = async function (key, values) {\n\tif (!key) {\n\t\treturn null;\n\t}\n\tif (!values.length) {\n\t\treturn [];\n\t}\n\tvalues = values.map(helpers.valueToString);\n\n\tconst res = await module.pool.query({"}]},
{"id":"04359623bd3e478b5db9d06c9bf6f95b547559a1","instances":[{"path":"./src/database/mongo/sorted.js","lines":[303,303],"code":"const result = await module.client.collection('objects').find({ _key: key, value: { $in: values } }, { projection: { _id: 0, _key: 0 } }).toArray();"},{"path":"./src/database/mongo/sorted.js","lines":[336,340],"code":"const results = await module.client.collection('objects').find({\n\t_key: key, value: { $in: values },\n}, {\n\tprojection: { _id: 0, value: 1 },\n}).toArray();"}]},
{"id":"03d8e9773a0ed1aaae62bd8550344293ffadd30b","instances":[{"path":"./src/database/mongo/sorted.js","lines":[328,336],"code":"module.isSortedSetMembers = async function (key, values) {\n\tif (!key) {\n\t\treturn;\n\t}\n\tif (!values.length) {\n\t\treturn [];\n\t}\n\tvalues = values.map(helpers.valueToString);\n\tconst results = await module.client.collection('objects').find({"},{"path":"./src/database/postgres/sorted.js","lines":[432,442],"code":"module.isSortedSetMembers = async function (key, values) {\n\tif (!key) {\n\t\treturn;\n\t}\n\n\tif (!values.length) {\n\t\treturn [];\n\t}\n\tvalues = values.map(helpers.valueToString);\n\n\tconst res = await module.pool.query({"}]},
{"id":"32691c189207d9b6a2d73af24a83029c2487480c","instances":[{"path":"./src/database/postgres/list.js","lines":[1,11],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('./helpers');\n\n\tmodule.listPrepend = async function (key, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait module.transaction(async (client) => {"},{"path":"./src/database/redis/list.js","lines":[1,10],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tconst helpers = require('./helpers');\n\n\tmodule.listPrepend = async function (key, value) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tawait module.client.lpush(key, value);"}]},
{"id":"7a06a0c5d648c41a274acb951ce3a7ed64ea3c31","instances":[{"path":"./src/database/postgres/main.js","lines":[75,85],"code":"module.scan = async function (params) {\n\tlet { match } = params;\n\tif (match.startsWith('*')) {\n\t\tmatch = `%${match.substring(1)}`;\n\t}\n\tif (match.endsWith('*')) {\n\t\tmatch = `${match.substring(0, match.length - 1)}%`;\n\t}\n\n\tconst res = await module.pool.query({\n\t\ttext: `"},{"path":"./src/database/postgres/sorted.js","lines":[691,702],"code":"module.getSortedSetScan = async function (params) {\n\tlet { match } = params;\n\tif (match.startsWith('*')) {\n\t\tmatch = `%${match.substring(1)}`;\n\t}\n\n\tif (match.endsWith('*')) {\n\t\tmatch = `${match.substring(0, match.length - 1)}%`;\n\t}\n\n\tconst res = await module.pool.query({\n\t\ttext: `"}]},
{"id":"e2fb84baa167839b752e6f684eac00818689d00a","instances":[{"path":"./src/database/postgres/sorted.js","lines":[58,75],"code":"\t\t\tlimit = null;\n\t\t}\n\n\t\tconst res = await module.pool.query({\n\t\t\tname: `getSortedSetRangeWithScores${sort > 0 ? 'Asc' : 'Desc'}`,\n\t\t\ttext: `\nSELECT z.\"value\",\n       z.\"score\"\n  FROM \"legacy_object_live\" o\n INNER JOIN \"legacy_zset\" z\n         ON o.\"_key\" = z.\"_key\"\n        AND o.\"type\" = z.\"type\"\n WHERE o.\"_key\" = ANY($1::TEXT[])\n ORDER BY z.\"score\" ${sort > 0 ? 'ASC' : 'DESC'}\n LIMIT $3::INTEGER\nOFFSET $2::INTEGER`,\n\t\t\tvalues: [key, start, limit],\n\t\t});"},{"path":"./src/database/postgres/sorted.js","lines":[123,142],"code":"\t\t\tmax = null;\n\t\t}\n\n\t\tconst res = await module.pool.query({\n\t\t\tname: `getSortedSetRangeByScoreWithScores${sort > 0 ? 'Asc' : 'Desc'}`,\n\t\t\ttext: `\nSELECT z.\"value\",\n       z.\"score\"\n  FROM \"legacy_object_live\" o\n INNER JOIN \"legacy_zset\" z\n         ON o.\"_key\" = z.\"_key\"\n        AND o.\"type\" = z.\"type\"\n WHERE o.\"_key\" = ANY($1::TEXT[])\n   AND (z.\"score\" >= $4::NUMERIC OR $4::NUMERIC IS NULL)\n   AND (z.\"score\" <= $5::NUMERIC OR $5::NUMERIC IS NULL)\n ORDER BY z.\"score\" ${sort > 0 ? 'ASC' : 'DESC'}\n LIMIT $3::INTEGER\nOFFSET $2::INTEGER`,\n\t\t\tvalues: [key, start, count, min, max],\n\t\t});"}]},
{"id":"e65e2c5a671858babdfcad7f11e8e4e50a807475","instances":[{"path":"./src/database/postgres/sorted.js","lines":[81,92],"code":"\tif (withScores) {\n\t\tres.rows = res.rows.map(r => ({ value: r.value, score: parseFloat(r.score) }));\n\t} else {\n\t\tres.rows = res.rows.map(r => r.value);\n\t}\n\n\treturn res.rows;\n}\n\nmodule.getSortedSetRangeByScore = async function (key, start, count, min, max) {\n\treturn await getSortedSetRangeByScore(key, start, count, min, max, 1, false);\n};"},{"path":"./src/database/postgres/sorted.js","lines":[144,153],"code":"\tif (withScores) {\n\t\tres.rows = res.rows.map(r => ({ value: r.value, score: parseFloat(r.score) }));\n\t} else {\n\t\tres.rows = res.rows.map(r => r.value);\n\t}\n\n\treturn res.rows;\n}\n\nmodule.sortedSetCount = async function (key, min, max) {"}]},
{"id":"e15840e5126edf90ba0e0fb72a8b26e7872d0f29","instances":[{"path":"./src/database/postgres/sorted.js","lines":[224,231],"code":"module.sortedSetsCardSum = async function (keys, min = '-inf', max = '+inf') {\n\tif (!keys || (Array.isArray(keys) && !keys.length)) {\n\t\treturn 0;\n\t}\n\tif (!Array.isArray(keys)) {\n\t\tkeys = [keys];\n\t}\n\tlet counts = [];"},{"path":"./src/database/redis/sorted.js","lines":[119,126],"code":"module.sortedSetsCardSum = async function (keys, min = '-inf', max = '+inf') {\n\tif (!keys || (Array.isArray(keys) && !keys.length)) {\n\t\treturn 0;\n\t}\n\tif (!Array.isArray(keys)) {\n\t\tkeys = [keys];\n\t}\n\tconst batch = module.client.batch();"}]},
{"id":"8e272162dbb094d36c2d989e9d597c0585143785","instances":[{"path":"./src/database/postgres/sorted/intersect.js","lines":[39,44],"code":"async function getSortedSetIntersect(params) {\n\tconst { sets } = params;\n\tconst start = params.hasOwnProperty('start') ? params.start : 0;\n\tconst stop = params.hasOwnProperty('stop') ? params.stop : -1;\n\tlet weights = params.weights || [];\n\tconst aggregate = params.aggregate || 'SUM';"},{"path":"./src/database/redis/sorted/intersect.js","lines":[32,38],"code":"async function getSortedSetRevIntersect(params) {\n\tconst { sets } = params;\n\tconst start = params.hasOwnProperty('start') ? params.start : 0;\n\tconst stop = params.hasOwnProperty('stop') ? params.stop : -1;\n\tconst weights = params.weights || [];\n\n\tconst tempSetName = `temp_${Date.now()}`;"}]},
{"id":"c21a7ec57fa1fc26c773f9f5c90013da88bc33cb","instances":[{"path":"./src/database/postgres/sorted/intersect.js","lines":[1,90],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tmodule.sortedSetIntersectCard = async function (keys) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst res = await module.pool.query({\n\t\t\tname: 'sortedSetIntersectCard',\n\t\t\ttext: `\nWITH A AS (SELECT z.\"value\" v,\n                  COUNT(*) c\n             FROM \"legacy_object_live\" o\n            INNER JOIN \"legacy_zset\" z\n                    ON o.\"_key\" = z.\"_key\"\n                   AND o.\"type\" = z.\"type\"\n            WHERE o.\"_key\" = ANY($1::TEXT[])\n            GROUP BY z.\"value\")\nSELECT COUNT(*) c\n  FROM A\n WHERE A.c = array_length($1::TEXT[], 1)`,\n\t\t\tvalues: [keys],\n\t\t});\n\n\t\treturn parseInt(res.rows[0].c, 10);\n\t};\n\n\tmodule.getSortedSetIntersect = async function (params) {\n\t\tparams.sort = 1;\n\t\treturn await getSortedSetIntersect(params);\n\t};\n\n\tmodule.getSortedSetRevIntersect = async function (params) {\n\t\tparams.sort = -1;\n\t\treturn await getSortedSetIntersect(params);\n\t};\n\n\tasync function getSortedSetIntersect(params) {\n\t\tconst { sets } = params;\n\t\tconst start = params.hasOwnProperty('start') ? params.start : 0;\n\t\tconst stop = params.hasOwnProperty('stop') ? params.stop : -1;\n\t\tlet weights = params.weights || [];\n\t\tconst aggregate = params.aggregate || 'SUM';\n\n\t\tif (sets.length < weights.length) {\n\t\t\tweights = weights.slice(0, sets.length);\n\t\t}\n\t\twhile (sets.length > weights.length) {\n\t\t\tweights.push(1);\n\t\t}\n\n\t\tlet limit = stop - start + 1;\n\t\tif (limit <= 0) {\n\t\t\tlimit = null;\n\t\t}\n\n\t\tconst res = await module.pool.query({\n\t\t\tname: `getSortedSetIntersect${aggregate}${params.sort > 0 ? 'Asc' : 'Desc'}WithScores`,\n\t\t\ttext: `\nWITH A AS (SELECT z.\"value\",\n                  ${aggregate}(z.\"score\" * k.\"weight\") \"score\",\n                  COUNT(*) c\n             FROM UNNEST($1::TEXT[], $2::NUMERIC[]) k(\"_key\", \"weight\")\n            INNER JOIN \"legacy_object_live\" o\n                    ON o.\"_key\" = k.\"_key\"\n            INNER JOIN \"legacy_zset\" z\n                    ON o.\"_key\" = z.\"_key\"\n                   AND o.\"type\" = z.\"type\"\n            GROUP BY z.\"value\")\nSELECT A.\"value\",\n       A.\"score\"\n  FROM A\n WHERE c = array_length($1::TEXT[], 1)\n ORDER BY A.\"score\" ${params.sort > 0 ? 'ASC' : 'DESC'}\n LIMIT $4::INTEGER\nOFFSET $3::INTEGER`,\n\t\t\tvalues: [sets, weights, start, limit],\n\t\t});\n\n\t\tif (params.withScores) {\n\t\t\tres.rows = res.rows.map(r => ({\n\t\t\t\tvalue: r.value,\n\t\t\t\tscore: parseFloat(r.score),\n\t\t\t}));\n\t\t} else {\n\t\t\tres.rows = res.rows.map(r => r.value);\n\t\t}\n\n\t\treturn res.rows;"},{"path":"./src/database/postgres/sorted/union.js","lines":[1,84],"code":"'use strict';\n\nmodule.exports = function (module) {\n\tmodule.sortedSetUnionCard = async function (keys) {\n\t\tif (!Array.isArray(keys) || !keys.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst res = await module.pool.query({\n\t\t\tname: 'sortedSetUnionCard',\n\t\t\ttext: `\nSELECT COUNT(DISTINCT z.\"value\") c\n  FROM \"legacy_object_live\" o\n INNER JOIN \"legacy_zset\" z\n         ON o.\"_key\" = z.\"_key\"\n        AND o.\"type\" = z.\"type\"\n WHERE o.\"_key\" = ANY($1::TEXT[])`,\n\t\t\tvalues: [keys],\n\t\t});\n\t\treturn res.rows[0].c;\n\t};\n\n\tmodule.getSortedSetUnion = async function (params) {\n\t\tparams.sort = 1;\n\t\treturn await getSortedSetUnion(params);\n\t};\n\n\tmodule.getSortedSetRevUnion = async function (params) {\n\t\tparams.sort = -1;\n\t\treturn await getSortedSetUnion(params);\n\t};\n\n\tasync function getSortedSetUnion(params) {\n\t\tconst { sets } = params;\n\t\tif (!sets || !sets.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst start = params.hasOwnProperty('start') ? params.start : 0;\n\t\tconst stop = params.hasOwnProperty('stop') ? params.stop : -1;\n\t\tlet weights = params.weights || [];\n\t\tconst aggregate = params.aggregate || 'SUM';\n\n\t\tif (sets.length < weights.length) {\n\t\t\tweights = weights.slice(0, sets.length);\n\t\t}\n\t\twhile (sets.length > weights.length) {\n\t\t\tweights.push(1);\n\t\t}\n\n\t\tlet limit = stop - start + 1;\n\t\tif (limit <= 0) {\n\t\t\tlimit = null;\n\t\t}\n\n\t\tconst res = await module.pool.query({\n\t\t\tname: `getSortedSetUnion${aggregate}${params.sort > 0 ? 'Asc' : 'Desc'}WithScores`,\n\t\t\ttext: `\nWITH A AS (SELECT z.\"value\",\n                  ${aggregate}(z.\"score\" * k.\"weight\") \"score\"\n             FROM UNNEST($1::TEXT[], $2::NUMERIC[]) k(\"_key\", \"weight\")\n            INNER JOIN \"legacy_object_live\" o\n                    ON o.\"_key\" = k.\"_key\"\n            INNER JOIN \"legacy_zset\" z\n                    ON o.\"_key\" = z.\"_key\"\n                   AND o.\"type\" = z.\"type\"\n            GROUP BY z.\"value\")\nSELECT A.\"value\",\n       A.\"score\"\n  FROM A\n ORDER BY A.\"score\" ${params.sort > 0 ? 'ASC' : 'DESC'}\n LIMIT $4::INTEGER\nOFFSET $3::INTEGER`,\n\t\t\tvalues: [sets, weights, start, limit],\n\t\t});\n\n\t\tif (params.withScores) {\n\t\t\tres.rows = res.rows.map(r => ({\n\t\t\t\tvalue: r.value,\n\t\t\t\tscore: parseFloat(r.score),\n\t\t\t}));\n\t\t} else {\n\t\t\tres.rows = res.rows.map(r => r.value);\n\t\t}\n\t\treturn res.rows;"}]},
{"id":"97d146fc6ad7fbad3bcf7cb89c30e275fb954817","instances":[{"path":"./src/database/redis/main.js","lines":[15,21],"code":"module.exists = async function (key) {\n\tif (Array.isArray(key)) {\n\t\tif (!key.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst batch = module.client.batch();\n\t\tkey.forEach(key => batch.exists(key));"},{"path":"./src/database/redis/sorted.js","lines":[29,35],"code":"async function sortedSetRange(method, key, start, stop, min, max, withScores) {\n\tif (Array.isArray(key)) {\n\t\tif (!key.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst batch = module.client.batch();\n\t\tkey.forEach(key => batch[method](genParams(method, key, 0, stop, min, max, true)));"}]},
{"id":"d0ac9a990c8d6a07a8a3e3a15fd92bae76349cec","instances":[{"path":"./src/groups/membership.js","lines":[58,62],"code":"nonCachedUids.forEach((uid, index) => {\n\tcachedData[`${uid}:${groupName}`] = isMembers[index];\n\tGroups.cache.set(`${uid}:${groupName}`, isMembers[index]);\n});\nreturn uids.map(uid => cachedData[`${uid}:${groupName}`]);"},{"path":"./src/groups/membership.js","lines":[77,82],"code":"nonCachedGroups.forEach((groupName, index) => {\n\tcachedData[`${uid}:${groupName}`] = isMembers[index];\n\tGroups.cache.set(`${uid}:${groupName}`, isMembers[index]);\n});\n\nreturn groups.map(groupName => cachedData[`${uid}:${groupName}`]);"}]},
{"id":"be34df7fb67092689f945a91d44c24a989cdd795","instances":[{"path":"./src/meta/configs.js","lines":[20,27],"code":"const deserialized = {};\nObject.keys(config).forEach((key) => {\n\tconst defaultType = typeof defaults[key];\n\tconst type = typeof config[key];\n\tconst number = parseFloat(config[key]);\n\n\tif (defaultType === 'string' && type === 'number') {\n\t\tdeserialized[key] = String(config[key]);"},{"path":"./src/meta/configs.js","lines":[58,65],"code":"const serialized = {};\nObject.keys(config).forEach((key) => {\n\tconst defaultType = typeof defaults[key];\n\tconst type = typeof config[key];\n\tconst number = parseFloat(config[key]);\n\n\tif (defaultType === 'string' && type === 'number') {\n\t\tserialized[key] = String(config[key]);"}]},
{"id":"288f0b4d901d3048123b911462787738c85f7a4e","instances":[{"path":"./src/meta/tags.js","lines":[98,105],"code":"if (!tag.noEscape) {\n\tconst attributes = Object.keys(tag);\n\tattributes.forEach((attr) => {\n\t\ttag[attr] = utils.escapeHTML(String(tag[attr]));\n\t});\n}\n\nreturn tag;"},{"path":"./src/meta/tags.js","lines":[122,129],"code":"if (!tag.noEscape) {\n\tconst attributes = Object.keys(tag);\n\tattributes.forEach((attr) => {\n\t\ttag[attr] = utils.escapeHTML(String(tag[attr]));\n\t});\n}\n\nreturn tag;"}]},
{"id":"dee5a4cde3e3943d15aa37bd00d07ff55e794d3e","instances":[{"path":"./src/plugins/hooks.js","lines":[161,170],"code":"async function fireMethod(hookObj, params) {\n\tif (typeof hookObj.method !== 'function') {\n\t\tif (global.env === 'development') {\n\t\t\twinston.warn(`[plugins] Expected method for hook '${hook}' in plugin '${hookObj.id}' not found, skipping.`);\n\t\t}\n\t\treturn params;\n\t}\n\n\tif (hookObj.method.constructor && hookObj.method.constructor.name === 'AsyncFunction') {\n\t\treturn await hookObj.method(params);"},{"path":"./src/plugins/hooks.js","lines":[220,229],"code":"async function fireMethod(hookObj, params) {\n\tif (typeof hookObj.method !== 'function') {\n\t\tif (global.env === 'development') {\n\t\t\twinston.warn(`[plugins] Expected method for hook '${hook}' in plugin '${hookObj.id}' not found, skipping.`);\n\t\t}\n\t\treturn params;\n\t}\n\n\tif (hookObj.method.constructor && hookObj.method.constructor.name === 'AsyncFunction') {\n\t\treturn timeout(hookObj.method(params), 10000, 'timeout');"}]},
{"id":"451965eb4edde5ea0d51807350177972319231fe","instances":[{"path":"./src/plugins/hooks.js","lines":[182,191],"code":"async function fireActionHook(hook, hookList, params) {\n\tif (!Array.isArray(hookList) || !hookList.length) {\n\t\treturn;\n\t}\n\tfor (const hookObj of hookList) {\n\t\tif (typeof hookObj.method !== 'function') {\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.warn(`[plugins] Expected method for hook '${hook}' in plugin '${hookObj.id}' not found, skipping.`);\n\t\t\t}\n\t\t} else {"},{"path":"./src/plugins/hooks.js","lines":[253,262],"code":"async function fireResponseHook(hook, hookList, params) {\n\tif (!Array.isArray(hookList) || !hookList.length) {\n\t\treturn;\n\t}\n\tfor (const hookObj of hookList) {\n\t\tif (typeof hookObj.method !== 'function') {\n\t\t\tif (global.env === 'development') {\n\t\t\t\twinston.warn(`[plugins] Expected method for hook '${hook}' in plugin '${hookObj.id}' not found, skipping.`);\n\t\t\t}\n\t\t} else {"}]},
{"id":"c9c604532cb8e91bc6ff445799f0d0afe58e6786","instances":[{"path":"./src/polls/redis.js","lines":[20,32],"code":"Polls.createPoll = async function (title, instructorUid = null, settings = {}) {\n\t// Check if UserID is valid\n\tif (!instructorUid || !(await User.exists(instructorUid))) {\n\t\tthrow new Error('[[error:invalid-uid]]');\n\t}\n\t// Check if user is admin\n\tconst isAdmin = await privileges.users.isAdministrator(instructorUid);\n\tif (!isAdmin) {\n\t\tthrow new Error('[[error:no-privileges]]');\n\t}\n \n\n\tconst pollId = await db.increment('poll:next_id');"},{"path":"./src/polls/redis.js","lines":[50,63],"code":"Polls.addOption = async function (instructorUid, pollId, text, sort = 0) {\n\t// Check if UserID is valid\n\tif (!instructorUid || !(await User.exists(instructorUid))) {\n\t\tthrow new Error('[[error:invalid-uid]]');\n\t}\n\n\t// Check if user is admin\n\tconst isAdmin = await privileges.users.isAdministrator(instructorUid);\n\tif (!isAdmin) {\n\t\tthrow new Error('[[error:no-privileges]]');\n\t}\n \n\t//Check if PollID exists, throw error if not\n\tconst pollKey = `poll:${pollId}`;"}]},
{"id":"b33066cf07444fd4eb9ab3fe28453808da6eca10","instances":[{"path":"./src/privileges/admin.js","lines":[157,162],"code":"const payload = await utils.promiseParallel({\n\tlabelData: Array.from(_privilegeMap.values()),\n\tusers: helpers.getUserPrivileges(0, keys.users),\n\tgroups: helpers.getGroupPrivileges(0, keys.groups),\n});\npayload.keys = keys;"},{"path":"./src/privileges/global.js","lines":[73,78],"code":"const payload = await utils.promiseParallel({\n\tlabelData: Array.from(_privilegeMap.values()),\n\tusers: helpers.getUserPrivileges(0, keys.users),\n\tgroups: helpers.getGroupPrivileges(0, keys.groups),\n});\npayload.keys = keys;"}]},
{"id":"d64289b92ffbac4fac6a4e5eec68033ecebbb0d1","instances":[{"path":"./src/routes/feeds.js","lines":[250,253],"code":"async function generateTopicsFeed(feedOptions, feedTopics, timestampField) {\n\tfeedOptions.ttl = 60;\n\tfeedOptions.feed_url = nconf.get('url') + feedOptions.feed_url;\n\tfeedOptions.site_url = nconf.get('url') + feedOptions.site_url;"},{"path":"./src/routes/feeds.js","lines":[348,351],"code":"function generateForPostsFeed(feedOptions, posts) {\n\tfeedOptions.ttl = 60;\n\tfeedOptions.feed_url = nconf.get('url') + feedOptions.feed_url;\n\tfeedOptions.site_url = nconf.get('url') + feedOptions.site_url;"}]},
{"id":"81c672f49e9efad6e626631ba6f49c621f651c1b","instances":[{"path":"./src/routes/helpers.js","lines":[9,18],"code":"helpers.setupPageRoute = function (...args) {\n\tconst [router, name] = args;\n\tlet middlewares = args.length > 3 ? args[args.length - 2] : [];\n\tconst controller = args[args.length - 1];\n\n\tif (args.length === 5) {\n\t\twinston.warn(`[helpers.setupPageRoute(${name})] passing \\`middleware\\` as the third param is deprecated, it can now be safely removed`);\n\t}\n\n\tmiddlewares = ["},{"path":"./src/routes/helpers.js","lines":[41,50],"code":"helpers.setupAdminPageRoute = function (...args) {\n\tconst [router, name] = args;\n\tconst middlewares = args.length > 3 ? args[args.length - 2] : [];\n\tconst controller = args[args.length - 1];\n\tif (args.length === 5) {\n\t\twinston.warn(`[helpers.setupAdminPageRoute(${name})] passing \\`middleware\\` as the third param is deprecated, it can now be safely removed`);\n\t}\n\trouter.get(name, middleware.autoLocale, middleware.admin.buildHeader, middlewares, helpers.tryRoute(controller));\n\trouter.get(`/api${name}`, middlewares, helpers.tryRoute(controller));\n};"}]},
{"id":"f0e6d0c24620c4748df80b98ca0473f9978eaa17","instances":[{"path":"./src/socket.io/posts.js","lines":[22,32],"code":"SocketPosts.getPostSummaryByIndex = async function (socket, data) {\n\tif (data.index < 0) {\n\t\tdata.index = 0;\n\t}\n\tlet pid;\n\tif (data.index === 0) {\n\t\tpid = await topics.getTopicField(data.tid, 'mainPid');\n\t} else {\n\t\tpid = await db.getSortedSetRange(`tid:${data.tid}:posts`, data.index - 1, data.index - 1);\n\t}\n\tpid = Array.isArray(pid) ? pid[0] : pid;"},{"path":"./src/socket.io/posts.js","lines":[40,50],"code":"SocketPosts.getPostTimestampByIndex = async function (socket, data) {\n\tif (data.index < 0) {\n\t\tdata.index = 0;\n\t}\n\tlet pid;\n\tif (data.index === 0) {\n\t\tpid = await topics.getTopicField(data.tid, 'mainPid');\n\t} else {\n\t\tpid = await db.getSortedSetRange(`tid:${data.tid}:posts`, data.index - 1, data.index - 1);\n\t}\n\tpid = Array.isArray(pid) ? pid[0] : pid;"}]},
{"id":"845492c11be0fa0487595322742b28932d25e589","instances":[{"path":"./src/socket.io/admin/cache.js","lines":[8,20],"code":"SocketCache.clear = async function (socket, data) {\n\tlet caches = {\n\t\tpost: require('../../posts/cache').getOrCreate(),\n\t\tobject: db.objectCache,\n\t\tgroup: require('../../groups').cache,\n\t\tlocal: require('../../cache'),\n\t};\n\tcaches = await plugins.hooks.fire('filter:admin.cache.get', caches);\n\tif (!caches[data.name]) {\n\t\treturn;\n\t}\n\tcaches[data.name].reset();\n};"},{"path":"./src/socket.io/admin/cache.js","lines":[22,34],"code":"SocketCache.toggle = async function (socket, data) {\n\tlet caches = {\n\t\tpost: require('../../posts/cache').getOrCreate(),\n\t\tobject: db.objectCache,\n\t\tgroup: require('../../groups').cache,\n\t\tlocal: require('../../cache'),\n\t};\n\tcaches = await plugins.hooks.fire('filter:admin.cache.get', caches);\n\tif (!caches[data.name]) {\n\t\treturn;\n\t}\n\tcaches[data.name].enabled = data.enabled;\n};"}]},
{"id":"5974030692b289be8444ef59ece59bbda2dc72a1","instances":[{"path":"./src/socket.io/admin/user.js","lines":[106,113],"code":"User.sendPasswordResetEmail = async function (socket, uids) {\n\tif (!Array.isArray(uids)) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\n\tuids = uids.filter(uid => parseInt(uid, 10));\n\n\tawait Promise.all(uids.map(async (uid) => {"},{"path":"./src/socket.io/admin/user.js","lines":[122,129],"code":"User.forcePasswordReset = async function (socket, uids) {\n\tif (!Array.isArray(uids)) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\n\tuids = uids.filter(uid => parseInt(uid, 10));\n\n\tawait db.setObjectField(uids.map(uid => `user:${uid}`), 'passwordExpiry', Date.now());"}]},
{"id":"584a313ffa9f396a32ee9c8e816d3b0fc4716a6c","instances":[{"path":"./src/socket.io/topics/tags.js","lines":[11,17],"code":"SocketTopics.isTagAllowed = async function (socket, data) {\n\tif (!data || !data.tag) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\n\tconst systemTags = (meta.config.systemTags || '').split(',');\n\tconst [tagWhitelist, isPrivileged] = await Promise.all(["},{"path":"./src/socket.io/topics/tags.js","lines":[28,36],"code":"SocketTopics.canRemoveTag = async function (socket, data) {\n\tif (!data || !data.tag) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\n\tconst systemTags = (meta.config.systemTags || '').split(',');\n\tconst isPrivileged = await user.isPrivileged(socket.uid);\n\treturn isPrivileged || !systemTags.includes(String(data.tag).trim());\n};"}]},
{"id":"b1cd8be1b80ebd510e298e946ae7df0c63d0015a","instances":[{"path":"./src/topics/follow.js","lines":[132,138],"code":"Topics.filterWatchedTids = async function (tids, uid) {\n\tif (parseInt(uid, 10) <= 0) {\n\t\treturn [];\n\t}\n\tconst scores = await db.sortedSetScores(`uid:${uid}:followed_tids`, tids);\n\treturn tids.filter((tid, index) => tid && !!scores[index]);\n};"},{"path":"./src/topics/unread.js","lines":[404,410],"code":"Topics.filterNewTids = async function (tids, uid) {\n\tif (parseInt(uid, 10) <= 0) {\n\t\treturn [];\n\t}\n\tconst scores = await db.sortedSetScores(`uid:${uid}:tids_read`, tids);\n\treturn tids.filter((tid, index) => tid && !scores[index]);\n};"}]},
{"id":"7760a8e0331168f77d07d99082eebf1488a15550","instances":[{"path":"./src/topics/scheduled.js","lines":[108,114],"code":"db.sortedSetAddBulk([\n\t[`cid:${topicData.cid}:tids`, topicData.lastposttime, tid],\n\t[`cid:${topicData.cid}:tids:create`, topicData.timestamp, tid],\n\t[`cid:${topicData.cid}:tids:posts`, topicData.postcount, tid],\n\t[`cid:${topicData.cid}:tids:votes`, parseInt(topicData.votes, 10) || 0, tid],\n\t[`cid:${topicData.cid}:tids:views`, topicData.viewcount, tid],\n]),"},{"path":"./src/topics/tools.js","lines":[182,188],"code":"promises.push(db.sortedSetAddBulk([\n\t[`cid:${topicData.cid}:tids`, topicData.lastposttime, tid],\n\t[`cid:${topicData.cid}:tids:create`, topicData.timestamp, tid],\n\t[`cid:${topicData.cid}:tids:posts`, topicData.postcount, tid],\n\t[`cid:${topicData.cid}:tids:votes`, parseInt(topicData.votes, 10) || 0, tid],\n\t[`cid:${topicData.cid}:tids:views`, topicData.viewcount, tid],\n]));"}]},
{"id":"9ede1228e03db568bcd7c7938c346839e8342976","instances":[{"path":"./src/topics/tags.js","lines":[366,371],"code":"const bulkAdd = [];\nconst bulkSet = [];\ntopicData.forEach((t) => {\n\tconst topicTags = t.tags.map(tagItem => tagItem.value);\n\ttags.forEach((tag) => {\n\t\tbulkAdd.push([`tag:${tag}:topics`, t.timestamp, t.tid]);"},{"path":"./src/topics/tags.js","lines":[390,396],"code":"const bulkRemove = [];\nconst bulkSet = [];\n\ntopicData.forEach((t) => {\n\tconst topicTags = t.tags.map(tagItem => tagItem.value);\n\ttags.forEach((tag) => {\n\t\tbulkRemove.push([`tag:${tag}:topics`, t.tid]);"}]},
{"id":"4eab7f987e47bc5ab9cd63913dc544c601ed45fb","instances":[{"path":"./src/upgrades/1.1.0/assign_topic_read_privilege.js","lines":[11,17],"code":"method: async function () {\n\tconst groupsAPI = require('../../groups');\n\tconst privilegesAPI = require('../../privileges');\n\n\tconst cids = await db.getSortedSetRange('categories:cid', 0, -1);\n\tfor (const cid of cids) {\n\t\tconst { groups, users } = await privilegesAPI.categories.list(cid);"},{"path":"./src/upgrades/1.2.0/edit_delete_deletetopic_privileges.js","lines":[11,18],"code":"method: async function () {\n\tconst groupsAPI = require('../../groups');\n\tconst privilegesAPI = require('../../privileges');\n\n\tconst cids = await db.getSortedSetRange('categories:cid', 0, -1);\n\n\tfor (const cid of cids) {\n\t\tconst data = await privilegesAPI.categories.list(cid);"}]},
{"id":"d75c8703bcafa671d68f9e2c8b2f4e5c8b89a45f","instances":[{"path":"./src/upgrades/1.10.2/fix_category_post_zsets.js","lines":[11,17],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tconst cids = await db.getSortedSetRange('categories:cid', 0, -1);\n\tconst keys = cids.map(cid => `cid:${cid}:pids`);\n\n\tawait batch.processSortedSet('posts:pid', async (postData) => {"},{"path":"./src/upgrades/1.12.0/category_watch_state.js","lines":[12,18],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tconst cids = await db.getSortedSetRange('categories:cid', 0, -1);\n\tconst keys = cids.map(cid => `cid:${cid}:ignorers`);\n\n\tawait batch.processSortedSet('users:joindate', async (uids) => {"}]},
{"id":"a2274a01891bed9d6f537642c7c2f2968a7066e7","instances":[{"path":"./src/upgrades/1.16.0/category_tags.js","lines":[11,21],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tasync function getTopicsTags(tids) {\n\t\treturn await db.getSetsMembers(\n\t\t\ttids.map(tid => `topic:${tid}:tags`),\n\t\t);\n\t}\n\n\tawait batch.processSortedSet('topics:tid', async (tids) => {\n\t\tconst [topicData, tags] = await Promise.all(["},{"path":"./src/upgrades/1.18.0/topic_tags_refactor.js","lines":[9,19],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tasync function getTopicsTags(tids) {\n\t\treturn await db.getSetsMembers(\n\t\t\ttids.map(tid => `topic:${tid}:tags`),\n\t\t);\n\t}\n\n\tawait batch.processSortedSet('topics:tid', async (tids) => {\n\t\tconst tags = await getTopicsTags(tids);"}]},
{"id":"222a0b95fc7c55cbda1eb68aa06a11b56e1799a2","instances":[{"path":"./src/upgrades/1.19.3/fix_user_uploads_zset.js","lines":[13,19],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('users:joindate', async (uids) => {\n\t\tprogress.incr(uids.length);\n\n\t\tawait Promise.all(uids.map(async (uid) => {"},{"path":"./src/upgrades/3.8.3/remove-session-uuid.js","lines":[10,15],"code":"method: async function () {\n\tconst { progress } = this;\n\n\tawait batch.processSortedSet('users:joindate', async (uids) => {\n\t\tprogress.incr(uids.length);\n\t\tawait db.deleteAll(uids.map(uid => `uid:${uid}:sessionUUID:sessionId`));"}]},
{"id":"d6fcb4a4dc6642dee71cb7aca84f2172cc69dbec","instances":[{"path":"./src/upgrades/3.3.0/chat_message_mids.js","lines":[10,18],"code":"timestamp: Date.UTC(2023, 6, 27),\nmethod: async function () {\n\tconst { progress } = this;\n\n\tconst allRoomIds = await db.getSortedSetRange(`chat:rooms`, 0, -1);\n\n\tprogress.total = allRoomIds.length;\n\n\tfor (const roomId of allRoomIds) {"},{"path":"./src/upgrades/3.6.0/chat_message_counts.js","lines":[9,14],"code":"timestamp: Date.UTC(2023, 6, 27),\nmethod: async function () {\n\tconst { progress } = this;\n\tconst allRoomIds = await db.getSortedSetRange(`chat:rooms`, 0, -1);\n\tprogress.total = allRoomIds.length;\n\tfor (const roomId of allRoomIds) {"}]},
{"id":"8ad98d49e6a7737ba04c66939258a5e12dd34296","instances":[{"path":"./src/upgrades/3.3.0/chat_message_mids.js","lines":[19,21],"code":"await batch.processSortedSet(`chat:room:${roomId}:mids`, async (mids) => {\n\tlet messageData = await db.getObjects(mids.map(mid => `message:${mid}`));\n\tmessageData.forEach((m, idx) => {"},{"path":"./src/user/jobs/export-profile.js","lines":[92,94],"code":"await batch.processSortedSet(`chat:room:${roomId}:mids`, async (mids) => {\n\tconst messageData = await db.getObjects(mids.map(mid => `message:${mid}`));\n\tdata = data.concat("}]},
{"id":"347ff9cb04e63ff4c9d82cd20cbce87d42d4bc1c","instances":[{"path":"./src/upgrades/4.3.0/fix_duplicate_handles.js","lines":[43,45],"code":"await Promise.all(Array.from(duplicateUsers).map(async (handle) => {\n\tconst max = '(' + handle.substr(0, handle.length - 1) + String.fromCharCode(handle.charCodeAt(handle.length - 1) + 1);\n\tlet ids = await db.getSortedSetRangeByLex('ap.preferredUsername:sorted', `[${handle}`, max);"},{"path":"./src/upgrades/4.3.0/fix_duplicate_handles.js","lines":[69,71],"code":"await Promise.all(Array.from(duplicateCategories).map(async (handle) => {\n\tconst max = '(' + handle.substr(0, handle.length - 1) + String.fromCharCode(handle.charCodeAt(handle.length - 1) + 1);\n\tlet ids = await db.getSortedSetRangeByLex('categories:name', `[${handle}`, max);"}]},
{"id":"20148aff0c496dbd20b59baa3d75475ced2a8b64","instances":[{"path":"./src/user/jobs/export-posts.js","lines":[25,30],"code":"process.on('message', async (msg) => {\n\tif (msg && msg.uid) {\n\t\tawait db.init();\n\n\t\tconst targetUid = msg.uid;\n\t\tconst filePath = path.join(__dirname, '../../../build/export', `${targetUid}_posts.csv`);"},{"path":"./src/user/jobs/export-uploads.js","lines":[25,31],"code":"process.on('message', async (msg) => {\n\tif (msg && msg.uid) {\n\t\tawait db.init();\n\n\t\tconst targetUid = msg.uid;\n\n\t\tconst archivePath = path.join(__dirname, '../../../build/export', `${targetUid}_uploads.zip`);"}]}]
